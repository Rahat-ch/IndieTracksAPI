{
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _v = _interopRequireDefault(require(\"uuid/v4\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nvar _resolvers = _interopRequireDefault(require(\"./resolvers\"));\n\nvar _models = _interopRequireWildcard(require(\"./models\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\n\nvar getMe =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req) {\n    var token;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = req.headers['x-token'];\n\n            if (!token) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return _jsonwebtoken[\"default\"].verify(token, process.env.SECRET);\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            throw new _apolloServerExpress.AuthenticationError('Your session expired. Sign in again.');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n\n  return function getMe(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar server = new _apolloServerExpress.ApolloServer({\n  typeDefs: _schema[\"default\"],\n  resolvers: _resolvers[\"default\"],\n  formatError: function formatError(error) {\n    // remove the internal sequelize error message\n    // leave only the important validation error\n    var message = error.message.replace('SequelizeValidationError: ', '').replace('Validation error: ', '');\n    return _objectSpread({}, error, {\n      message: message\n    });\n  },\n  context: function () {\n    var _context2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2) {\n      var req, me;\n      return regeneratorRuntime.wrap(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              req = _ref2.req;\n              _context3.next = 3;\n              return getMe(req);\n\n            case 3:\n              me = _context3.sent;\n              return _context3.abrupt(\"return\", {\n                models: _models[\"default\"],\n                me: me,\n                secret: process.env.SECRET\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function context(_x2) {\n      return _context2.apply(this, arguments);\n    }\n\n    return context;\n  }()\n});\nserver.applyMiddleware({\n  app: app,\n  path: '/graphql'\n});\nvar eraseDatabaseOnSync = true;\n\n_models.sequelize.sync({\n  force: eraseDatabaseOnSync\n}).then(\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\nregeneratorRuntime.mark(function _callee3() {\n  return regeneratorRuntime.wrap(function _callee3$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!eraseDatabaseOnSync) {\n            _context4.next = 3;\n            break;\n          }\n\n          _context4.next = 3;\n          return createUsersWithMessages(new Date());\n\n        case 3:\n          app.listen({\n            port: 8000\n          }, function () {\n            console.log('Apollo Server on http://localhost:8000/graphql');\n          });\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee3);\n})));\n\nvar createUsersWithMessages =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(date) {\n    return regeneratorRuntime.wrap(function _callee4$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _models[\"default\"].User.create({\n              username: 'rchowdhury',\n              email: 'hello@rahat.com',\n              password: 'rchowdhury',\n              role: 'ADMIN',\n              messages: [{\n                text: 'I\\'m Hackerman',\n                createdAt: date.setSeconds(date.getSeconds() + 1)\n              }]\n            }, {\n              include: [_models[\"default\"].Message]\n            });\n\n          case 2:\n            _context5.next = 4;\n            return _models[\"default\"].User.create({\n              username: 'hkhan',\n              email: 'hello@khan.com',\n              password: 'hkhan123',\n              messages: [{\n                text: 'I love pizza!',\n                createdAt: date.setSeconds(date.getSeconds() + 1)\n              }, {\n                text: 'Stop eating chocolate!',\n                createdAt: date.setSeconds(date.getSeconds() + 1)\n              }]\n            }, {\n              include: [_models[\"default\"].Message]\n            });\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function createUsersWithMessages(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImdldE1lIiwicmVxIiwidG9rZW4iLCJoZWFkZXJzIiwiand0IiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVCIsIkF1dGhlbnRpY2F0aW9uRXJyb3IiLCJzZXJ2ZXIiLCJBcG9sbG9TZXJ2ZXIiLCJ0eXBlRGVmcyIsInNjaGVtYSIsInJlc29sdmVycyIsImZvcm1hdEVycm9yIiwiZXJyb3IiLCJtZXNzYWdlIiwicmVwbGFjZSIsImNvbnRleHQiLCJtZSIsIm1vZGVscyIsInNlY3JldCIsImFwcGx5TWlkZGxld2FyZSIsInBhdGgiLCJlcmFzZURhdGFiYXNlT25TeW5jIiwic2VxdWVsaXplIiwic3luYyIsImZvcmNlIiwidGhlbiIsImNyZWF0ZVVzZXJzV2l0aE1lc3NhZ2VzIiwiRGF0ZSIsImxpc3RlbiIsInBvcnQiLCJjb25zb2xlIiwibG9nIiwiZGF0ZSIsIlVzZXIiLCJjcmVhdGUiLCJ1c2VybmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJyb2xlIiwibWVzc2FnZXMiLCJ0ZXh0IiwiY3JlYXRlZEF0Iiwic2V0U2Vjb25kcyIsImdldFNlY29uZHMiLCJpbmNsdWRlIiwiTWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFLQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVI7O0FBRUEsSUFBTUMsS0FBSztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUcsaUJBQU1DLEdBQU47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ05DLFlBQUFBLEtBRE0sR0FDRUQsR0FBRyxDQUFDRSxPQUFKLENBQVksU0FBWixDQURGOztBQUFBLGlCQUdSRCxLQUhRO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSxtQkFLS0Us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QUFBQSxPQUFPLEVBQUUsQ0FBQzNCLG1CQUFPNEIsT0FBUjtBQURYLGFBYkksQ0FEd0I7O0FBQUE7QUFBQTtBQUFBLG1CQW1CeEI1QixtQkFBT2dCLElBQVAsQ0FBWUMsTUFBWixDQUNKO0FBQ0VDLGNBQUFBLFFBQVEsRUFBRSxPQURaO0FBRUVDLGNBQUFBLEtBQUssRUFBRSxnQkFGVDtBQUdFQyxjQUFBQSxRQUFRLEVBQUUsVUFIWjtBQUlFRSxjQUFBQSxRQUFRLEVBQUUsQ0FDUjtBQUNFQyxnQkFBQUEsSUFBSSxFQUFFLGVBRFI7QUFFRUMsZ0JBQUFBLFNBQVMsRUFBRVQsSUFBSSxDQUFDVSxVQUFMLENBQWdCVixJQUFJLENBQUNXLFVBQUwsS0FBb0IsQ0FBcEM7QUFGYixlQURRLEVBS1I7QUFDRUgsZ0JBQUFBLElBQUksRUFBRSx3QkFEUjtBQUVFQyxnQkFBQUEsU0FBUyxFQUFFVCxJQUFJLENBQUNVLFVBQUwsQ0FBZ0JWLElBQUksQ0FBQ1csVUFBTCxLQUFvQixDQUFwQztBQUZiLGVBTFE7QUFKWixhQURJLEVBZ0JKO0FBQ0VDLGNBQUFBLE9BQU8sRUFBRSxDQUFDM0IsbUJBQU80QixPQUFSO0FBRFgsYUFoQkksQ0FuQndCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQXZCbkIsdUJBQXVCO0FBQUE7QUFBQTtBQUFBLEdBQTdCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yY2hvd2RodXJ5L0Rlc2t0b3AvRGV2X1N0dWZmL3F1aXpub3cvYmFja2VuZC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2RvdGVudi9jb25maWcnO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5pbXBvcnQgdXVpZHY0IGZyb20gJ3V1aWQvdjQnO1xuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge1xuICBBcG9sbG9TZXJ2ZXIsXG4gIEF1dGhlbnRpY2F0aW9uRXJyb3IsXG59IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmltcG9ydCBzY2hlbWEgZnJvbSAnLi9zY2hlbWEnO1xuaW1wb3J0IHJlc29sdmVycyBmcm9tICcuL3Jlc29sdmVycyc7XG5pbXBvcnQgbW9kZWxzLCB7IHNlcXVlbGl6ZSB9IGZyb20gJy4vbW9kZWxzJztcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKGNvcnMoKSk7XG5cbmNvbnN0IGdldE1lID0gYXN5bmMgcmVxID0+IHtcbiAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVyc1sneC10b2tlbiddO1xuXG4gIGlmICh0b2tlbikge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gYXdhaXQgand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuU0VDUkVUKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aHJvdyBuZXcgQXV0aGVudGljYXRpb25FcnJvcihcbiAgICAgICAgJ1lvdXIgc2Vzc2lvbiBleHBpcmVkLiBTaWduIGluIGFnYWluLicsXG4gICAgICApO1xuICAgIH1cbiAgfVxufTtcblxuY29uc3Qgc2VydmVyID0gbmV3IEFwb2xsb1NlcnZlcih7XG4gIHR5cGVEZWZzOiBzY2hlbWEsXG4gIHJlc29sdmVycyxcbiAgZm9ybWF0RXJyb3I6IGVycm9yID0+IHtcbiAgICAvLyByZW1vdmUgdGhlIGludGVybmFsIHNlcXVlbGl6ZSBlcnJvciBtZXNzYWdlXG4gICAgLy8gbGVhdmUgb25seSB0aGUgaW1wb3J0YW50IHZhbGlkYXRpb24gZXJyb3JcbiAgICBjb25zdCBtZXNzYWdlID0gZXJyb3IubWVzc2FnZVxuICAgICAgLnJlcGxhY2UoJ1NlcXVlbGl6ZVZhbGlkYXRpb25FcnJvcjogJywgJycpXG4gICAgICAucmVwbGFjZSgnVmFsaWRhdGlvbiBlcnJvcjogJywgJycpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLmVycm9yLFxuICAgICAgbWVzc2FnZSxcbiAgICB9O1xuICB9LFxuICBjb250ZXh0OiBhc3luYyAoeyByZXEgfSkgPT4ge1xuICAgIGNvbnN0IG1lID0gYXdhaXQgZ2V0TWUocmVxKTtcblxuICAgIHJldHVybiB7XG4gICAgICBtb2RlbHMsXG4gICAgICBtZSxcbiAgICAgIHNlY3JldDogcHJvY2Vzcy5lbnYuU0VDUkVULFxuICAgIH07XG4gIH0sXG59KTtcblxuc2VydmVyLmFwcGx5TWlkZGxld2FyZSh7IGFwcCwgcGF0aDogJy9ncmFwaHFsJyB9KTtcblxuY29uc3QgZXJhc2VEYXRhYmFzZU9uU3luYyA9IHRydWU7XG5cbnNlcXVlbGl6ZS5zeW5jKHsgZm9yY2U6IGVyYXNlRGF0YWJhc2VPblN5bmMgfSkudGhlbihhc3luYyAoKSA9PiB7XG4gIGlmIChlcmFzZURhdGFiYXNlT25TeW5jKSB7XG4gICAgYXdhaXQgY3JlYXRlVXNlcnNXaXRoTWVzc2FnZXMobmV3IERhdGUoKSk7XG4gIH1cblxuICBhcHAubGlzdGVuKHsgcG9ydDogODAwMCB9LCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0Fwb2xsbyBTZXJ2ZXIgb24gaHR0cDovL2xvY2FsaG9zdDo4MDAwL2dyYXBocWwnKTtcbiAgfSk7XG59KTtcblxuY29uc3QgY3JlYXRlVXNlcnNXaXRoTWVzc2FnZXMgPSBhc3luYyBkYXRlID0+IHsgXG4gIGF3YWl0IG1vZGVscy5Vc2VyLmNyZWF0ZShcbiAgICB7XG4gICAgICB1c2VybmFtZTogJ3JjaG93ZGh1cnknLFxuICAgICAgZW1haWw6ICdoZWxsb0ByYWhhdC5jb20nLFxuICAgICAgcGFzc3dvcmQ6ICdyY2hvd2RodXJ5JyxcbiAgICAgIHJvbGU6ICdBRE1JTicsXG4gICAgICBtZXNzYWdlczogW1xuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ0lcXCdtIEhhY2tlcm1hbicsXG4gICAgICAgICAgY3JlYXRlZEF0OiBkYXRlLnNldFNlY29uZHMoZGF0ZS5nZXRTZWNvbmRzKCkgKyAxKSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7XG4gICAgICBpbmNsdWRlOiBbbW9kZWxzLk1lc3NhZ2VdLFxuICAgIH0sXG4gICk7XG4gICAgXG4gIGF3YWl0IG1vZGVscy5Vc2VyLmNyZWF0ZShcbiAgICB7XG4gICAgICB1c2VybmFtZTogJ2hraGFuJyxcbiAgICAgIGVtYWlsOiAnaGVsbG9Aa2hhbi5jb20nLFxuICAgICAgcGFzc3dvcmQ6ICdoa2hhbjEyMycsXG4gICAgICBtZXNzYWdlczogW1xuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ0kgbG92ZSBwaXp6YSEnLFxuICAgICAgICAgIGNyZWF0ZWRBdDogZGF0ZS5zZXRTZWNvbmRzKGRhdGUuZ2V0U2Vjb25kcygpICsgMSksXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICB0ZXh0OiAnU3RvcCBlYXRpbmcgY2hvY29sYXRlIScsXG4gICAgICAgICAgY3JlYXRlZEF0OiBkYXRlLnNldFNlY29uZHMoZGF0ZS5nZXRTZWNvbmRzKCkgKyAxKSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7XG4gICAgICBpbmNsdWRlOiBbbW9kZWxzLk1lc3NhZ2VdLFxuICAgIH0sXG4gICk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "getMe",
        "req",
        "token",
        "headers",
        "jwt",
        "verify",
        "process",
        "env",
        "SECRET",
        "AuthenticationError",
        "server",
        "ApolloServer",
        "typeDefs",
        "schema",
        "resolvers",
        "formatError",
        "error",
        "message",
        "replace",
        "context",
        "me",
        "models",
        "secret",
        "applyMiddleware",
        "path",
        "eraseDatabaseOnSync",
        "sequelize",
        "sync",
        "force",
        "then",
        "createUsersWithMessages",
        "Date",
        "listen",
        "port",
        "console",
        "log",
        "date",
        "User",
        "create",
        "username",
        "email",
        "password",
        "role",
        "messages",
        "text",
        "createdAt",
        "setSeconds",
        "getSeconds",
        "include",
        "Message"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src",
      "sourcesContent": [
        "import 'dotenv/config';\nimport cors from 'cors';\nimport uuidv4 from 'uuid/v4';\nimport jwt from 'jsonwebtoken';\nimport express from 'express';\nimport {\n  ApolloServer,\n  AuthenticationError,\n} from 'apollo-server-express';\n\nimport schema from './schema';\nimport resolvers from './resolvers';\nimport models, { sequelize } from './models';\n\nconst app = express();\n\napp.use(cors());\n\nconst getMe = async req => {\n  const token = req.headers['x-token'];\n\n  if (token) {\n    try {\n      return await jwt.verify(token, process.env.SECRET);\n    } catch (e) {\n      throw new AuthenticationError(\n        'Your session expired. Sign in again.',\n      );\n    }\n  }\n};\n\nconst server = new ApolloServer({\n  typeDefs: schema,\n  resolvers,\n  formatError: error => {\n    // remove the internal sequelize error message\n    // leave only the important validation error\n    const message = error.message\n      .replace('SequelizeValidationError: ', '')\n      .replace('Validation error: ', '');\n\n    return {\n      ...error,\n      message,\n    };\n  },\n  context: async ({ req }) => {\n    const me = await getMe(req);\n\n    return {\n      models,\n      me,\n      secret: process.env.SECRET,\n    };\n  },\n});\n\nserver.applyMiddleware({ app, path: '/graphql' });\n\nconst eraseDatabaseOnSync = true;\n\nsequelize.sync({ force: eraseDatabaseOnSync }).then(async () => {\n  if (eraseDatabaseOnSync) {\n    await createUsersWithMessages(new Date());\n  }\n\n  app.listen({ port: 8000 }, () => {\n    console.log('Apollo Server on http://localhost:8000/graphql');\n  });\n});\n\nconst createUsersWithMessages = async date => { \n  await models.User.create(\n    {\n      username: 'rchowdhury',\n      email: 'hello@rahat.com',\n      password: 'rchowdhury',\n      role: 'ADMIN',\n      messages: [\n        {\n          text: 'I\\'m Hackerman',\n          createdAt: date.setSeconds(date.getSeconds() + 1),\n        },\n      ],\n    },\n    {\n      include: [models.Message],\n    },\n  );\n    \n  await models.User.create(\n    {\n      username: 'hkhan',\n      email: 'hello@khan.com',\n      password: 'hkhan123',\n      messages: [\n        {\n          text: 'I love pizza!',\n          createdAt: date.setSeconds(date.getSeconds() + 1),\n        },\n        {\n          text: 'Stop eating chocolate!',\n          createdAt: date.setSeconds(date.getSeconds() + 1),\n        },\n      ],\n    },\n    {\n      include: [models.Message],\n    },\n  );\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1556133378314
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _user = _interopRequireDefault(require(\"./user\"));\n\nvar _message = _interopRequireDefault(require(\"./message\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\n  scalar Date\\n  \\n  type Query {\\n    _: Boolean\\n  }\\n  type Mutation {\\n    _: Boolean\\n  }\\n  type Subscription {\\n    _: Boolean\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar linkSchema = (0, _apolloServerExpress.gql)(_templateObject());\nvar _default = [linkSchema, _user[\"default\"], _message[\"default\"]];\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImxpbmtTY2hlbWEiLCJncWwiLCJ1c2VyU2NoZW1hIiwibWVzc2FnZVNjaGVtYSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVSxPQUFHQyx3QkFBSCxvQkFBaEI7ZUFlZSxDQUFDRCxVQUFELEVBQWFFLGdCQUFiLEVBQXlCQyxtQkFBekIsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmNob3dkaHVyeS9EZXNrdG9wL0Rldl9TdHVmZi9xdWl6bm93L2JhY2tlbmQvc3JjL3NjaGVtYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmltcG9ydCB1c2VyU2NoZW1hIGZyb20gJy4vdXNlcic7XG5pbXBvcnQgbWVzc2FnZVNjaGVtYSBmcm9tICcuL21lc3NhZ2UnO1xuXG5jb25zdCBsaW5rU2NoZW1hID0gZ3FsYFxuXG4gIHNjYWxhciBEYXRlXG4gIFxuICB0eXBlIFF1ZXJ5IHtcbiAgICBfOiBCb29sZWFuXG4gIH1cbiAgdHlwZSBNdXRhdGlvbiB7XG4gICAgXzogQm9vbGVhblxuICB9XG4gIHR5cGUgU3Vic2NyaXB0aW9uIHtcbiAgICBfOiBCb29sZWFuXG4gIH1cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IFtsaW5rU2NoZW1hLCB1c2VyU2NoZW1hLCBtZXNzYWdlU2NoZW1hXTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "linkSchema",
        "gql",
        "userSchema",
        "messageSchema"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,OAAGC,wBAAH,oBAAhB;eAee,CAACD,UAAD,EAAaE,gBAAb,EAAyBC,mBAAzB,C",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nimport userSchema from './user';\nimport messageSchema from './message';\n\nconst linkSchema = gql`\n\n  scalar Date\n  \n  type Query {\n    _: Boolean\n  }\n  type Mutation {\n    _: Boolean\n  }\n  type Subscription {\n    _: Boolean\n  }\n`;\n\nexport default [linkSchema, userSchema, messageSchema];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556133402723
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  extend type Query {\\n    users: [User!]\\n    user(id: ID!): User\\n    me: User\\n  }\\n\\n  extend type Mutation {\\n    signUp(\\n      username: String!\\n      email: String!\\n      password: String!\\n    ): Token!\\n\\n    signIn(login: String!, password: String!): Token!\\n    deleteUser(id: ID!): Boolean!\\n  }\\n\\n  type Token {\\n    token: String!\\n  }\\n  \\n  type User {\\n    id: ID!\\n    username: String!\\n    email: String!\\n    role: String\\n    messages: [Message!]\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _default = (0, _apolloServerExpress.gql)(_templateObject());\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZ3FsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7O21CQUVlQSx3QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmNob3dkaHVyeS9EZXNrdG9wL0Rldl9TdHVmZi9xdWl6bm93L2JhY2tlbmQvc3JjL3NjaGVtYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGdxbGBcbiAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgIHVzZXJzOiBbVXNlciFdXG4gICAgdXNlcihpZDogSUQhKTogVXNlclxuICAgIG1lOiBVc2VyXG4gIH1cblxuICBleHRlbmQgdHlwZSBNdXRhdGlvbiB7XG4gICAgc2lnblVwKFxuICAgICAgdXNlcm5hbWU6IFN0cmluZyFcbiAgICAgIGVtYWlsOiBTdHJpbmchXG4gICAgICBwYXNzd29yZDogU3RyaW5nIVxuICAgICk6IFRva2VuIVxuXG4gICAgc2lnbkluKGxvZ2luOiBTdHJpbmchLCBwYXNzd29yZDogU3RyaW5nISk6IFRva2VuIVxuICAgIGRlbGV0ZVVzZXIoaWQ6IElEISk6IEJvb2xlYW4hXG4gIH1cblxuICB0eXBlIFRva2VuIHtcbiAgICB0b2tlbjogU3RyaW5nIVxuICB9XG4gIFxuICB0eXBlIFVzZXIge1xuICAgIGlkOiBJRCFcbiAgICB1c2VybmFtZTogU3RyaW5nIVxuICAgIGVtYWlsOiBTdHJpbmchXG4gICAgcm9sZTogU3RyaW5nXG4gICAgbWVzc2FnZXM6IFtNZXNzYWdlIV1cbiAgfVxuYDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;mBAEeA,wB",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nexport default gql`\n  extend type Query {\n    users: [User!]\n    user(id: ID!): User\n    me: User\n  }\n\n  extend type Mutation {\n    signUp(\n      username: String!\n      email: String!\n      password: String!\n    ): Token!\n\n    signIn(login: String!, password: String!): Token!\n    deleteUser(id: ID!): Boolean!\n  }\n\n  type Token {\n    token: String!\n  }\n  \n  type User {\n    id: ID!\n    username: String!\n    email: String!\n    role: String\n    messages: [Message!]\n  }\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1556120177388
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/message.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/message.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/message.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema/message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema",
        "sourceFileName": "message.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  extend type Query {\\n    messages(cursor: String, limit: Int): MessageConnection!\\n    message(id: ID!): Message!\\n  }\\n  extend type Mutation {\\n    createMessage(text: String!): Message!\\n    deleteMessage(id: ID!): Boolean!\\n  }\\n  type MessageConnection {\\n    edges: [Message!]!\\n    pageInfo: PageInfo!\\n  }\\n  type PageInfo {\\n    hasNextPage: Boolean!\\n    endCursor: Date!\\n  }\\n  type Message {\\n    id: ID!\\n    text: String!\\n    createdAt: Date!\\n    user: User!\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _default = (0, _apolloServerExpress.gql)(_templateObject());\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UuanMiXSwibmFtZXMiOlsiZ3FsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7O21CQUVlQSx3QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmNob3dkaHVyeS9EZXNrdG9wL0Rldl9TdHVmZi9xdWl6bm93L2JhY2tlbmQvc3JjL3NjaGVtYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGdxbGBcbiAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgIG1lc3NhZ2VzKGN1cnNvcjogU3RyaW5nLCBsaW1pdDogSW50KTogTWVzc2FnZUNvbm5lY3Rpb24hXG4gICAgbWVzc2FnZShpZDogSUQhKTogTWVzc2FnZSFcbiAgfVxuICBleHRlbmQgdHlwZSBNdXRhdGlvbiB7XG4gICAgY3JlYXRlTWVzc2FnZSh0ZXh0OiBTdHJpbmchKTogTWVzc2FnZSFcbiAgICBkZWxldGVNZXNzYWdlKGlkOiBJRCEpOiBCb29sZWFuIVxuICB9XG4gIHR5cGUgTWVzc2FnZUNvbm5lY3Rpb24ge1xuICAgIGVkZ2VzOiBbTWVzc2FnZSFdIVxuICAgIHBhZ2VJbmZvOiBQYWdlSW5mbyFcbiAgfVxuICB0eXBlIFBhZ2VJbmZvIHtcbiAgICBoYXNOZXh0UGFnZTogQm9vbGVhbiFcbiAgICBlbmRDdXJzb3I6IERhdGUhXG4gIH1cbiAgdHlwZSBNZXNzYWdlIHtcbiAgICBpZDogSUQhXG4gICAgdGV4dDogU3RyaW5nIVxuICAgIGNyZWF0ZWRBdDogRGF0ZSFcbiAgICB1c2VyOiBVc2VyIVxuICB9XG5gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "message.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;mBAEeA,wB",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/schema",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nexport default gql`\n  extend type Query {\n    messages(cursor: String, limit: Int): MessageConnection!\n    message(id: ID!): Message!\n  }\n  extend type Mutation {\n    createMessage(text: String!): Message!\n    deleteMessage(id: ID!): Boolean!\n  }\n  type MessageConnection {\n    edges: [Message!]!\n    pageInfo: PageInfo!\n  }\n  type PageInfo {\n    hasNextPage: Boolean!\n    endCursor: Date!\n  }\n  type Message {\n    id: ID!\n    text: String!\n    createdAt: Date!\n    user: User!\n  }\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1556141929500
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _graphqlIsoDate = require(\"graphql-iso-date\");\n\nvar _user = _interopRequireDefault(require(\"../resolvers/user\"));\n\nvar _message = _interopRequireDefault(require(\"../resolvers/message\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar customScalarResolver = {\n  Date: _graphqlIsoDate.GraphQLDateTime\n};\nvar _default = [customScalarResolver, _user[\"default\"], _message[\"default\"]];\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImN1c3RvbVNjYWxhclJlc29sdmVyIiwiRGF0ZSIsIkdyYXBoUUxEYXRlVGltZSIsInVzZXJSZXNvbHZlcnMiLCJtZXNzYWdlUmVzb2x2ZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxvQkFBb0IsR0FBRztBQUN6QkMsRUFBQUEsSUFBSSxFQUFFQztBQURtQixDQUE3QjtlQUllLENBQ1hGLG9CQURXLEVBRVhHLGdCQUZXLEVBR1hDLG1CQUhXLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JjaG93ZGh1cnkvRGVza3RvcC9EZXZfU3R1ZmYvcXVpem5vdy9iYWNrZW5kL3NyYy9yZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMRGF0ZVRpbWUgfSBmcm9tICdncmFwaHFsLWlzby1kYXRlJ1xuXG5pbXBvcnQgdXNlclJlc29sdmVycyBmcm9tICcuLi9yZXNvbHZlcnMvdXNlcic7XG5pbXBvcnQgbWVzc2FnZVJlc29sdmVycyBmcm9tICcuLi9yZXNvbHZlcnMvbWVzc2FnZSc7XG5cbmNvbnN0IGN1c3RvbVNjYWxhclJlc29sdmVyID0ge1xuICAgIERhdGU6IEdyYXBoUUxEYXRlVGltZSxcbn1cblxuZXhwb3J0IGRlZmF1bHQgW1xuICAgIGN1c3RvbVNjYWxhclJlc29sdmVyLFxuICAgIHVzZXJSZXNvbHZlcnMsIFxuICAgIG1lc3NhZ2VSZXNvbHZlcnMsXG5dOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "customScalarResolver",
        "Date",
        "GraphQLDateTime",
        "userResolvers",
        "messageResolvers"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;;;AAEA,IAAMA,oBAAoB,GAAG;AACzBC,EAAAA,IAAI,EAAEC;AADmB,CAA7B;eAIe,CACXF,oBADW,EAEXG,gBAFW,EAGXC,mBAHW,C",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
      "sourcesContent": [
        "import { GraphQLDateTime } from 'graphql-iso-date'\n\nimport userResolvers from '../resolvers/user';\nimport messageResolvers from '../resolvers/message';\n\nconst customScalarResolver = {\n    Date: GraphQLDateTime,\n}\n\nexport default [\n    customScalarResolver,\n    userResolvers, \n    messageResolvers,\n];"
      ]
    },
    "sourceType": "script",
    "mtime": 1556133543660
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _authorization = require(\"./authorization\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar createToken =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(user, secret, expiresIn) {\n    var id, email, username, role;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = user.id, email = user.email, username = user.username, role = user.role;\n            _context.next = 3;\n            return _jsonwebtoken[\"default\"].sign({\n              id: id,\n              email: email,\n              username: username,\n              role: role\n            }, secret, {\n              expiresIn: expiresIn\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createToken(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = {\n  Query: {\n    users: function () {\n      var _users = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(parent, args, _ref2) {\n        var models;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                models = _ref2.models;\n                _context2.next = 3;\n                return models.User.findAll();\n\n              case 3:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function users(_x4, _x5, _x6) {\n        return _users.apply(this, arguments);\n      }\n\n      return users;\n    }(),\n    user: function () {\n      var _user = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(parent, _ref3, _ref4) {\n        var id, models;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                id = _ref3.id;\n                models = _ref4.models;\n                _context3.next = 4;\n                return models.User.findByPk(id);\n\n              case 4:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function user(_x7, _x8, _x9) {\n        return _user.apply(this, arguments);\n      }\n\n      return user;\n    }(),\n    me: function () {\n      var _me2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(parent, args, _ref5) {\n        var models, _me;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                models = _ref5.models, _me = _ref5.me;\n\n                if (_me) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", null);\n\n              case 3:\n                _context4.next = 5;\n                return models.User.findByPk(_me.id);\n\n              case 5:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function me(_x10, _x11, _x12) {\n        return _me2.apply(this, arguments);\n      }\n\n      return me;\n    }()\n  },\n  Mutation: {\n    signUp: function () {\n      var _signUp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(parent, _ref6, _ref7) {\n        var username, email, password, models, secret, user;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                username = _ref6.username, email = _ref6.email, password = _ref6.password;\n                models = _ref7.models, secret = _ref7.secret;\n                _context5.next = 4;\n                return models.User.create({\n                  username: username,\n                  email: email,\n                  password: password\n                });\n\n              case 4:\n                user = _context5.sent;\n                return _context5.abrupt(\"return\", {\n                  token: createToken(user, secret, '120m')\n                });\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function signUp(_x13, _x14, _x15) {\n        return _signUp.apply(this, arguments);\n      }\n\n      return signUp;\n    }(),\n    signIn: function () {\n      var _signIn = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(parent, _ref8, _ref9) {\n        var login, password, models, secret, user, isValid;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                login = _ref8.login, password = _ref8.password;\n                models = _ref9.models, secret = _ref9.secret;\n                _context6.next = 4;\n                return models.User.findByLogin(login);\n\n              case 4:\n                user = _context6.sent;\n\n                if (user) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                throw new _apolloServer.UserInputError('No user found with this login credentials.');\n\n              case 7:\n                _context6.next = 9;\n                return user.validatePassword(password);\n\n              case 9:\n                isValid = _context6.sent;\n\n                if (isValid) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                throw new _apolloServer.AuthenticationError('Invalid password.');\n\n              case 12:\n                return _context6.abrupt(\"return\", {\n                  token: createToken(user, secret, '120m')\n                });\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function signIn(_x16, _x17, _x18) {\n        return _signIn.apply(this, arguments);\n      }\n\n      return signIn;\n    }(),\n    deleteUser: (0, _graphqlResolvers.combineResolvers)(_authorization.isAdmin,\n    /*#__PURE__*/\n    function () {\n      var _ref12 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(parent, _ref10, _ref11) {\n        var id, models;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                id = _ref10.id;\n                models = _ref11.models;\n                _context7.next = 4;\n                return models.User.destroy({\n                  where: {\n                    id: id\n                  }\n                });\n\n              case 4:\n                return _context7.abrupt(\"return\", _context7.sent);\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x19, _x20, _x21) {\n        return _ref12.apply(this, arguments);\n      };\n    }())\n  },\n  User: {\n    messages: function () {\n      var _messages = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(user, args, _ref13) {\n        var models;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                models = _ref13.models;\n                _context8.next = 3;\n                return models.Message.findAll({\n                  where: {\n                    userId: user.id\n                  }\n                });\n\n              case 3:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function messages(_x22, _x23, _x24) {\n        return _messages.apply(this, arguments);\n      }\n\n      return messages;\n    }()\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "createToken",
        "user",
        "secret",
        "expiresIn",
        "id",
        "email",
        "username",
        "role",
        "jwt",
        "sign",
        "Query",
        "users",
        "parent",
        "args",
        "models",
        "User",
        "findAll",
        "findByPk",
        "me",
        "Mutation",
        "signUp",
        "password",
        "create",
        "token",
        "signIn",
        "login",
        "findByLogin",
        "UserInputError",
        "validatePassword",
        "isValid",
        "AuthenticationError",
        "deleteUser",
        "isAdmin",
        "destroy",
        "where",
        "messages",
        "Message",
        "userId"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport { combineResolvers } from 'graphql-resolvers';\nimport { AuthenticationError, UserInputError } from 'apollo-server';\n\nimport { isAdmin } from './authorization';\n\nconst createToken = async (user, secret, expiresIn) => {\n  const { id, email, username, role } = user;\n  return await jwt.sign({ id, email, username, role }, secret, {\n    expiresIn,\n  });\n};\n\nexport default {\n  Query: {\n    users: async (parent, args, { models }) => {\n      return await models.User.findAll();\n    },\n    user: async (parent, { id }, { models }) => {\n      return await models.User.findByPk(id);\n    },\n    me: async (parent, args, { models, me }) => {\n      if (!me) {\n        return null;\n      }\n\n      return await models.User.findByPk(me.id);\n    },\n  },\n\n  Mutation: {\n    signUp: async (\n      parent,\n      { username, email, password },\n      { models, secret },\n    ) => {\n      const user = await models.User.create({\n        username,\n        email,\n        password,\n      });\n\n      return { token: createToken(user, secret, '120m') };\n    },\n\n    signIn: async (\n      parent,\n      { login, password },\n      { models, secret },\n    ) => {\n      const user = await models.User.findByLogin(login);\n\n      if (!user) {\n        throw new UserInputError(\n          'No user found with this login credentials.',\n        );\n      }\n\n      const isValid = await user.validatePassword(password);\n\n      if (!isValid) {\n        throw new AuthenticationError('Invalid password.');\n      }\n\n      return { token: createToken(user, secret, '120m') };\n    },\n\n    deleteUser: combineResolvers(\n      isAdmin,\n      async (parent, { id }, { models }) => {\n        return await models.User.destroy({\n          where: { id },\n        });\n      },\n    ),\n  },\n\n  User: {\n    messages: async (user, args, { models }) => {\n      return await models.Message.findAll({\n        where: {\n          userId: user.id,\n        },\n      });\n    },\n  },\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1556120177388
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/message.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/message.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/message.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
        "sourceFileName": "message.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nvar _authorization = require(\"./authorization\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar toCursorHash = function toCursorHash(string) {\n  return Buffer.from(string, 'base64').toString('ascii');\n};\n\nvar _default = {\n  Query: {\n    messages: function () {\n      var _messages = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(parent, _ref, _ref2) {\n        var cursor, _ref$limit, limit, models, cursorOptions, messages, hasNextPage, edges;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cursor = _ref.cursor, _ref$limit = _ref.limit, limit = _ref$limit === void 0 ? 100 : _ref$limit;\n                models = _ref2.models;\n                cursorOptions = cursor ? {\n                  where: {\n                    createdAt: _defineProperty({}, _sequelize[\"default\"].Op.lt, fromCursorHash(cursor))\n                  }\n                } : {};\n                _context.next = 5;\n                return models.Message.findAll(_objectSpread({\n                  order: [['createdAt', 'DESC']],\n                  limit: limit + 1\n                }, cursorOptions));\n\n              case 5:\n                messages = _context.sent;\n                hasNextPage = messages.length > limit;\n                edges = hasNextPage ? messages.slice(0, -1) : messages;\n                return _context.abrupt(\"return\", {\n                  edges: edges,\n                  pageInfo: {\n                    hasNextPage: hasNextPage,\n                    endCursor: toCursorHash(edges[edges.length - 1].createdAt.toString())\n                  }\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function messages(_x, _x2, _x3) {\n        return _messages.apply(this, arguments);\n      }\n\n      return messages;\n    }(),\n    message: function () {\n      var _message = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(parent, _ref3, _ref4) {\n        var id, models;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = _ref3.id;\n                models = _ref4.models;\n                _context2.next = 4;\n                return models.Message.findById(id);\n\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function message(_x4, _x5, _x6) {\n        return _message.apply(this, arguments);\n      }\n\n      return message;\n    }()\n  },\n  Mutation: {\n    createMessage: (0, _graphqlResolvers.combineResolvers)(_authorization.isAuthenticated,\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(parent, _ref5, _ref6) {\n        var text, models, me;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                text = _ref5.text;\n                models = _ref6.models, me = _ref6.me;\n                _context3.next = 4;\n                return models.Message.create({\n                  text: text,\n                  userId: me.id\n                });\n\n              case 4:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x7, _x8, _x9) {\n        return _ref7.apply(this, arguments);\n      };\n    }()),\n    deleteMessage: (0, _graphqlResolvers.combineResolvers)(_authorization.isAuthenticated, _authorization.isMessageOwner,\n    /*#__PURE__*/\n    function () {\n      var _ref10 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(parent, _ref8, _ref9) {\n        var id, models;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                id = _ref8.id;\n                models = _ref9.models;\n                _context4.next = 4;\n                return models.Message.destroy({\n                  where: {\n                    id: id\n                  }\n                });\n\n              case 4:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x10, _x11, _x12) {\n        return _ref10.apply(this, arguments);\n      };\n    }())\n  },\n  Message: {\n    user: function () {\n      var _user = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(message, args, _ref11) {\n        var models;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                models = _ref11.models;\n                _context5.next = 3;\n                return models.User.findByPk(message.userId);\n\n              case 3:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function user(_x13, _x14, _x15) {\n        return _user.apply(this, arguments);\n      }\n\n      return user;\n    }()\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UuanMiXSwibmFtZXMiOlsidG9DdXJzb3JIYXNoIiwic3RyaW5nIiwiQnVmZmVyIiwiZnJvbSIsInRvU3RyaW5nIiwiUXVlcnkiLCJtZXNzYWdlcyIsInBhcmVudCIsImN1cnNvciIsImxpbWl0IiwibW9kZWxzIiwiY3Vyc29yT3B0aW9ucyIsIndoZXJlIiwiY3JlYXRlZEF0IiwiU2VxdWVsaXplIiwiT3AiLCJsdCIsImZyb21DdXJzb3JIYXNoIiwiTWVzc2FnZSIsImZpbmRBbGwiLCJvcmRlciIsImhhc05leHRQYWdlIiwibGVuZ3RoIiwiZWRnZXMiLCJzbGljZSIsInBhZ2VJbmZvIiwiZW5kQ3Vyc29yIiwibWVzc2FnZSIsImlkIiwiZmluZEJ5SWQiLCJNdXRhdGlvbiIsImNyZWF0ZU1lc3NhZ2UiLCJpc0F1dGhlbnRpY2F0ZWQiLCJ0ZXh0IiwibWUiLCJjcmVhdGUiLCJ1c2VySWQiLCJkZWxldGVNZXNzYWdlIiwiaXNNZXNzYWdlT3duZXIiLCJkZXN0cm95IiwidXNlciIsImFyZ3MiLCJVc2VyIiwiZmluZEJ5UGsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQUMsTUFBTTtBQUFBLFNBQ3pCQyxNQUFNLENBQUNDLElBQVAsQ0FBWUYsTUFBWixFQUFvQixRQUFwQixFQUE4QkcsUUFBOUIsQ0FBdUMsT0FBdkMsQ0FEeUI7QUFBQSxDQUEzQjs7ZUFHZTtBQUNiQyxFQUFBQSxLQUFLLEVBQUU7QUFDTEMsSUFBQUEsUUFBUTtBQUFBO0FBQUE7QUFBQSw4QkFBRSxpQkFBT0MsTUFBUDtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1JDLGdCQUFBQSxNQURRLFFBQ1JBLE1BRFEsb0JBRVJDLEtBRlEsRUFFUkEsS0FGUSwyQkFFQSxHQUZBO0FBSVJDLGdCQUFBQSxNQUpRLFNBSVJBLE1BSlE7QUFNRkMsZ0JBQUFBLGFBTkUsR0FNY0gsTUFB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VCxpQkFBdkIsQ0FEZjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BSGE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFYUCxHQTlDRztBQWtFYlYsRUFBQUEsT0FBTyxFQUFFO0FBQ1BzQixJQUFBQSxJQUFJO0FBQUE7QUFBQTtBQUFBLDhCQUFFLGtCQUFPYixPQUFQLEVBQWdCYyxJQUFoQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBd0IvQixnQkFBQUEsTUFBeEIsVUFBd0JBLE1BQXhCO0FBQUE7QUFBQSx1QkFDU0EsTUFBTSxDQUFDZ0MsSUFBUCxDQUFZQyxRQUFaLENBQXFCaEIsT0FBTyxDQUFDUyxNQUE3QixDQURUOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FBRjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQURHO0FBbEVJLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JjaG93ZGh1cnkvRGVza3RvcC9EZXZfU3R1ZmYvcXVpem5vdy9iYWNrZW5kL3NyYy9yZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5pbXBvcnQgeyBjb21iaW5lUmVzb2x2ZXJzIH0gZnJvbSAnZ3JhcGhxbC1yZXNvbHZlcnMnO1xuXG5pbXBvcnQgeyBpc0F1dGhlbnRpY2F0ZWQsIGlzTWVzc2FnZU93bmVyIH0gZnJvbSAnLi9hdXRob3JpemF0aW9uJztcblxuY29uc3QgdG9DdXJzb3JIYXNoID0gc3RyaW5nID0+XG4gIEJ1ZmZlci5mcm9tKHN0cmluZywgJ2Jhc2U2NCcpLnRvU3RyaW5nKCdhc2NpaScpO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFF1ZXJ5OiB7XG4gICAgbWVzc2FnZXM6IGFzeW5jIChwYXJlbnQsIHtcbiAgICAgIGN1cnNvcixcbiAgICAgIGxpbWl0ID0gMTAwXG4gICAgfSwge1xuICAgICAgbW9kZWxzXG4gICAgfSkgPT4ge1xuICAgICAgY29uc3QgY3Vyc29yT3B0aW9ucyA9IGN1cnNvclxuICAgICAgPyB7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgY3JlYXRlZEF0OiB7XG4gICAgICAgICAgICBbU2VxdWVsaXplLk9wLmx0XTogZnJvbUN1cnNvckhhc2goY3Vyc29yKSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfVxuICAgICAgOiB7fTtcbiAgICAgIFxuICAgICAgY29uc3QgbWVzc2FnZXMgPSBhd2FpdCBtb2RlbHMuTWVzc2FnZS5maW5kQWxsKHtcbiAgICAgICAgb3JkZXI6IFtbJ2NyZWF0ZWRBdCcsICdERVNDJ11dLFxuICAgICAgICBsaW1pdDogbGltaXQgKyAxLFxuICAgICAgICAuLi5jdXJzb3JPcHRpb25zLFxuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IGhhc05leHRQYWdlID0gbWVzc2FnZXMubGVuZ3RoID4gbGltaXQ7XG4gICAgICBjb25zdCBlZGdlcyA9IGhhc05leHRQYWdlID8gbWVzc2FnZXMuc2xpY2UoMCwgLTEpIDogbWVzc2FnZXM7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGVkZ2VzLFxuICAgICAgICBwYWdlSW5mbzoge1xuICAgICAgICAgIGhhc05leHRQYWdlLFxuICAgICAgICAgIGVuZEN1cnNvcjogdG9DdXJzb3JIYXNoKFxuICAgICAgICAgICAgZWRnZXNbZWRnZXMubGVuZ3RoIC0xXS5jcmVhdGVkQXQudG9TdHJpbmcoKSxcbiAgICAgICAgICApLFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICB9LFxuICAgIG1lc3NhZ2U6IGFzeW5jIChwYXJlbnQsIHtcbiAgICAgIGlkXG4gICAgfSwge1xuICAgICAgbW9kZWxzXG4gICAgfSkgPT4ge1xuICAgICAgcmV0dXJuIGF3YWl0IG1vZGVscy5NZXNzYWdlLmZpbmRCeUlkKGlkKTtcbiAgICB9LFxuICB9LFxuXG4gIE11dGF0aW9uOiB7XG4gICAgY3JlYXRlTWVzc2FnZTogY29tYmluZVJlc29sdmVycyhcbiAgICAgIGlzQXV0aGVudGljYXRlZCxcbiAgICAgIGFzeW5jIChwYXJlbnQsIHsgdGV4dCB9LCB7IG1vZGVscywgbWUgfSkgPT4ge1xuICAgICAgICByZXR1cm4gYXdhaXQgbW9kZWxzLk1lc3NhZ2UuY3JlYXRlKHtcbiAgICAgICAgICB0ZXh0LFxuICAgICAgICAgIHVzZXJJZDogbWUuaWQsXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICApLFxuXG4gICAgZGVsZXRlTWVzc2FnZTogY29tYmluZVJlc29sdmVycyhcbiAgICAgIGlzQXV0aGVudGljYXRlZCxcbiAgICAgIGlzTWVzc2FnZU93bmVyLFxuICAgICAgYXN5bmMgKHBhcmVudCwgeyBpZCB9LCB7IG1vZGVscyB9KSA9PiB7XG4gICAgICAgIHJldHVybiBhd2FpdCBtb2RlbHMuTWVzc2FnZS5kZXN0cm95KHsgd2hlcmU6IHsgaWQgfSB9KTtcbiAgICAgIH0sXG4gICAgKSxcbiAgfSxcblxuICBNZXNzYWdlOiB7XG4gICAgdXNlcjogYXN5bmMgKG1lc3NhZ2UsIGFyZ3MsIHsgbW9kZWxzIH0pID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCBtb2RlbHMuVXNlci5maW5kQnlQayhtZXNzYWdlLnVzZXJJZCk7XG4gICAgfSxcbiAgfSxcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "message.js"
      ],
      "names": [
        "toCursorHash",
        "string",
        "Buffer",
        "from",
        "toString",
        "Query",
        "messages",
        "parent",
        "cursor",
        "limit",
        "models",
        "cursorOptions",
        "where",
        "createdAt",
        "Sequelize",
        "Op",
        "lt",
        "fromCursorHash",
        "Message",
        "findAll",
        "order",
        "hasNextPage",
        "length",
        "edges",
        "slice",
        "pageInfo",
        "endCursor",
        "message",
        "id",
        "findById",
        "Mutation",
        "createMessage",
        "isAuthenticated",
        "text",
        "me",
        "create",
        "userId",
        "deleteMessage",
        "isMessageOwner",
        "destroy",
        "user",
        "args",
        "User",
        "findByPk"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\nimport { combineResolvers } from 'graphql-resolvers';\n\nimport { isAuthenticated, isMessageOwner } from './authorization';\n\nconst toCursorHash = string =>\n  Buffer.from(string, 'base64').toString('ascii');\n\nexport default {\n  Query: {\n    messages: async (parent, {\n      cursor,\n      limit = 100\n    }, {\n      models\n    }) => {\n      const cursorOptions = cursor\n      ? {\n        where: {\n          createdAt: {\n            [Sequelize.Op.lt]: fromCursorHash(cursor),\n          },\n        },\n      }\n      : {};\n      \n      const messages = await models.Message.findAll({\n        order: [['createdAt', 'DESC']],\n        limit: limit + 1,\n        ...cursorOptions,\n      });\n\n      const hasNextPage = messages.length > limit;\n      const edges = hasNextPage ? messages.slice(0, -1) : messages;\n\n      return {\n        edges,\n        pageInfo: {\n          hasNextPage,\n          endCursor: toCursorHash(\n            edges[edges.length -1].createdAt.toString(),\n          ),\n        },\n      };\n    },\n    message: async (parent, {\n      id\n    }, {\n      models\n    }) => {\n      return await models.Message.findById(id);\n    },\n  },\n\n  Mutation: {\n    createMessage: combineResolvers(\n      isAuthenticated,\n      async (parent, { text }, { models, me }) => {\n        return await models.Message.create({\n          text,\n          userId: me.id,\n        });\n      },\n    ),\n\n    deleteMessage: combineResolvers(\n      isAuthenticated,\n      isMessageOwner,\n      async (parent, { id }, { models }) => {\n        return await models.Message.destroy({ where: { id } });\n      },\n    ),\n  },\n\n  Message: {\n    user: async (message, args, { models }) => {\n      return await models.User.findByPk(message.userId);\n    },\n  },\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1556143950141
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.sequelize = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar sequelize = new _sequelize[\"default\"](process.env.DATABASE, process.env.DATABASE_USER, process.env.DATABASE_PASSWORD, {\n  dialect: 'postgres'\n});\nexports.sequelize = sequelize;\nvar models = {\n  User: sequelize[\"import\"]('./user'),\n  Message: sequelize[\"import\"]('./message')\n};\nObject.keys(models).forEach(function (key) {\n  if ('associate' in models[key]) {\n    models[key].associate(models);\n  }\n});\nvar _default = models;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRSIsIkRBVEFCQVNFX1VTRVIiLCJEQVRBQkFTRV9QQVNTV09SRCIsImRpYWxlY3QiLCJtb2RlbHMiLCJVc2VyIiwiTWVzc2FnZSIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwiYXNzb2NpYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUcsSUFBSUMscUJBQUosQ0FDaEJDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQURJLEVBRWhCRixPQUFPLENBQUNDLEdBQVIsQ0FBWUUsYUFGSSxFQUdoQkgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLGlCQUhJLEVBSWhCO0FBQ0VDLEVBQUFBLE9BQU8sRUFBRTtBQURYLENBSmdCLENBQWxCOztBQVNBLElBQU1DLE1BQU0sR0FBRztBQUNiQyxFQUFBQSxJQUFJLEVBQUVULFNBQVMsVUFBVCxDQUFpQixRQUFqQixDQURPO0FBRWJVLEVBQUFBLE9BQU8sRUFBRVYsU0FBUyxVQUFULENBQWlCLFdBQWpCO0FBRkksQ0FBZjtBQUtBVyxNQUFNLENBQUNDLElBQVAsQ0FBWUosTUFBWixFQUFvQkssT0FBcEIsQ0FBNEIsVUFBQUMsR0FBRyxFQUFJO0FBQ2pDLE1BQUksZUFBZU4sTUFBTSxDQUFDTSxHQUFELENBQXpCLEVBQWdDO0FBQzlCTixJQUFBQSxNQUFNLENBQUNNLEdBQUQsQ0FBTixDQUFZQyxTQUFaLENBQXNCUCxNQUF0QjtBQUNEO0FBQ0YsQ0FKRDtlQVFlQSxNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yY2hvd2RodXJ5L0Rlc2t0b3AvRGV2X1N0dWZmL3F1aXpub3cvYmFja2VuZC9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuXG5jb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKFxuICBwcm9jZXNzLmVudi5EQVRBQkFTRSxcbiAgcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVNFUixcbiAgcHJvY2Vzcy5lbnYuREFUQUJBU0VfUEFTU1dPUkQsXG4gIHtcbiAgICBkaWFsZWN0OiAncG9zdGdyZXMnLFxuICB9LFxuKTtcblxuY29uc3QgbW9kZWxzID0ge1xuICBVc2VyOiBzZXF1ZWxpemUuaW1wb3J0KCcuL3VzZXInKSxcbiAgTWVzc2FnZTogc2VxdWVsaXplLmltcG9ydCgnLi9tZXNzYWdlJyksXG59O1xuXG5PYmplY3Qua2V5cyhtb2RlbHMpLmZvckVhY2goa2V5ID0+IHtcbiAgaWYgKCdhc3NvY2lhdGUnIGluIG1vZGVsc1trZXldKSB7XG4gICAgbW9kZWxzW2tleV0uYXNzb2NpYXRlKG1vZGVscyk7XG4gIH1cbn0pO1xuXG5leHBvcnQgeyBzZXF1ZWxpemUgfTtcblxuZXhwb3J0IGRlZmF1bHQgbW9kZWxzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "process",
        "env",
        "DATABASE",
        "DATABASE_USER",
        "DATABASE_PASSWORD",
        "dialect",
        "models",
        "User",
        "Message",
        "Object",
        "keys",
        "forEach",
        "key",
        "associate"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,qBAAJ,CAChBC,OAAO,CAACC,GAAR,CAAYC,QADI,EAEhBF,OAAO,CAACC,GAAR,CAAYE,aAFI,EAGhBH,OAAO,CAACC,GAAR,CAAYG,iBAHI,EAIhB;AACEC,EAAAA,OAAO,EAAE;AADX,CAJgB,CAAlB;;AASA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAET,SAAS,UAAT,CAAiB,QAAjB,CADO;AAEbU,EAAAA,OAAO,EAAEV,SAAS,UAAT,CAAiB,WAAjB;AAFI,CAAf;AAKAW,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,OAApB,CAA4B,UAAAC,GAAG,EAAI;AACjC,MAAI,eAAeN,MAAM,CAACM,GAAD,CAAzB,EAAgC;AAC9BN,IAAAA,MAAM,CAACM,GAAD,CAAN,CAAYC,SAAZ,CAAsBP,MAAtB;AACD;AACF,CAJD;eAQeA,M",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\n\nconst sequelize = new Sequelize(\n  process.env.DATABASE,\n  process.env.DATABASE_USER,\n  process.env.DATABASE_PASSWORD,\n  {\n    dialect: 'postgres',\n  },\n);\n\nconst models = {\n  User: sequelize.import('./user'),\n  Message: sequelize.import('./message'),\n};\n\nObject.keys(models).forEach(key => {\n  if ('associate' in models[key]) {\n    models[key].associate(models);\n  }\n});\n\nexport { sequelize };\n\nexport default models;"
      ]
    },
    "sourceType": "script",
    "mtime": 1555472751317
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar user = function user(sequelize, DataTypes) {\n  var User = sequelize.define('user', {\n    username: {\n      type: DataTypes.STRING,\n      unique: true,\n      allowNull: false,\n      validate: {\n        notEmpty: true\n      }\n    },\n    email: {\n      type: DataTypes.STRING,\n      unique: true,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        isEmail: true\n      }\n    },\n    password: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        len: [7, 42]\n      }\n    },\n    role: {\n      type: DataTypes.STRING\n    }\n  });\n\n  User.associate = function (models) {\n    User.hasMany(models.Message, {\n      onDelete: 'CASCADE'\n    });\n  };\n\n  User.findByLogin =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(login) {\n      var user;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return User.findOne({\n                where: {\n                  username: login\n                }\n              });\n\n            case 2:\n              user = _context.sent;\n\n              if (user) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 6;\n              return User.findOne({\n                where: {\n                  email: login\n                }\n              });\n\n            case 6:\n              user = _context.sent;\n\n            case 7:\n              return _context.abrupt(\"return\", user);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  User.beforeCreate(\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(user) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return user.generatePasswordHash();\n\n            case 2:\n              user.password = _context2.sent;\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n  User.prototype.generatePasswordHash =\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3() {\n    var saltRounds;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            saltRounds = 10;\n            _context3.next = 3;\n            return _bcrypt[\"default\"].hash(this.password, saltRounds);\n\n          case 3:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  User.prototype.validatePassword =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(password) {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _bcrypt[\"default\"].compare(password, this.password);\n\n            case 2:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    return function (_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return User;\n};\n\nvar _default = user;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsidXNlciIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlVzZXIiLCJkZWZpbmUiLCJ1c2VybmFtZSIsInR5cGUiLCJTVFJJTkciLCJ1bmlxdWUiLCJhbGxvd051bGwiLCJ2YWxpZGF0ZSIsIm5vdEVtcHR5IiwiZW1haWwiLCJpc0VtYWlsIiwicGFzc3dvcmQiLCJsZW4iLCJyb2xlIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsIk1lc3NhZ2UiLCJvbkRlbGV0ZSIsImZpbmRCeUxvZ2luIiwibG9naW4iLCJmaW5kT25lIiwid2hlcmUiLCJiZWZvcmVDcmVhdGUiLCJnZW5lcmF0ZVBhc3N3b3JkSGFzaCIsInByb3RvdHlwZSIsInNhbHRSb3VuZHMiLCJiY3J5cHQiLCJoYXNoIiwidmFsaWRhdGVQYXNzd29yZCIsImNvbXBhcmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7QUFFQSxJQUFNQSxJQUFJLEdBQUcsU0FBUEEsSUFBTyxDQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDckMsTUFBTUMsSUFBSSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsTUFBakIsRUFBeUI7QUFDcENDLElBQUFBLFFBQVEsRUFBRTtBQUNSQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssTUFEUjtBQUVSQyxNQUFBQSxNQUFNLEVBQUUsSUFGQTtBQUdSQyxNQUFBQSxTQUFTLEVBQUUsS0FISDtBQUlSQyxNQUFBQSxRQUFRLEVBQUU7QUFDUkMsUUFBQUEsUUFBUSxFQUFFO0FBREY7QUFKRixLQUQwQjtBQVNwQ0MsSUFBQUEsS0FBSyxFQUFFO0FBQ0xOLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxNQURYO0FBRUxDLE1BQUFBLE1BQU0sRUFBRSxJQUZIO0FBR0xDLE1BQUFBLFNBQVMsRUFBRSxLQUhOO0FBSUxDLE1BQUFBLFFBQVEsRUFBRTtBQUNSQyxRQUFBQSxRQUFRLEVBQUUsSUFERjtBQUVSRSxRQUFBQSxPQUFPLEVBQUU7QUFGRDtBQUpMLEtBVDZCO0FBa0JwQ0MsSUFBQUEsUUFBUSxFQUFFO0FBQ1JSLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxNQURSO0FBRVJFLE1BQUFBLFNBQVMsRUFBRSxLQUZIO0FBR1JDLE1BQUFBLFFBQVEsRUFBRTtBQUNSQyxRQUFBQSxRQUFRLEVBQUUsSUFERjtBQUVSSSxRQUFBQSxHQUFHLEVBQUUsQ0FBQyxDQUFELEVBQUksRUFBSjtBQUZHO0FBSEYsS0FsQjBCO0FBMEJwQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0pWLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURaO0FBMUI4QixHQUF6QixDQUFiOztBQStCQUosRUFBQUEsSUFBSSxDQUFDYyxTQUFMLEdBQWlCLFVBQUFDLE1BQU0sRUFBSTtBQUN6QmYsSUFBQUEsSUFBSSxDQUFDZ0IsT0FBTCxDQUFhRCxNQUFNLENBQUNFLE9BQXBCLEVBQTZCO0FBQUVDLE1BQUFBLFFBQVEsRUFBRTtBQUFaLEtBQTdCO0FBQ0QsR0FGRDs7QUFJQWxCLEVBQUFBLElBQUksQ0FBQ21CLFdBQUw7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDRCQUFtQixpQkFBTUMsS0FBTjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHFCQUNBcEIsSUFBSSxDQUFDcUIsT0FBTCxDQUFhO0FBQzVCQyxnQkFBQUEsS0FBSyxFQUFFO0FBQUVwQixrQkFBQUEsUUFBUSxFQUFFa0I7QUFBWjtBQURxQixlQUFiLENBREE7O0FBQUE7QUFDYnZCLGNBQUFBLElBRGE7O0FBQUEsa0JBS1pBLElBTFk7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxxQkFNRkcsSUFBSSxDQUFDcUIsT0FBTCxDQUFhO0FBQ3hCQyxnQkFBQUEsS0FBSyxFQUFFO0FBQUViLGtCQUFBQSxLQUFLLEVBQUVXO0FBQVQ7QUFEaUIsZUFBYixDQU5FOztBQUFBO0FBTWZ2QixjQUFBQSxJQU5lOztBQUFBO0FBQUEsK0NBV1ZBLElBWFU7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FBbkI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBY0FHLEVBQUFBLElBQUksQ0FBQ3VCLFlBQUw7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDRCQUFrQixrQkFBTTFCLElBQU47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBQ01BLElBQUksQ0FBQzJCLG9CQUFMLEVBRE47O0FBQUE7QUFDaEIzQixjQUFBQSxJQUFJLENBQUNjLFFBRFc7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FBbEI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJQVgsRUFBQUEsSUFBSSxDQUFDeUIsU0FBTCxDQUFlRCxvQkFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFzQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDOUJFLFlBQUFBLFVBRDhCLEdBQ2pCLEVBRGlCO0FBQUE7QUFBQSxtQkFFdkJDLG1CQUFPQyxJQUFQLENBQVksS0FBS2pCLFFBQWpCLEVBQTJCZSxVQUEzQixDQUZ1Qjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQXRDOztBQUtBMUIsRUFBQUEsSUFBSSxDQUFDeUIsU0FBTCxDQUFlSSxnQkFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsNEJBQWtDLGtCQUFlbEIsUUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxxQkFDbkJnQixtQkFBT0csT0FBUCxDQUFlbkIsUUFBZixFQUF5QixLQUFLQSxRQUE5QixDQURtQjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQWxDOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUlBLFNBQU9YLElBQVA7QUFDRCxDQWhFRDs7ZUFrRWVILEkiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JjaG93ZGh1cnkvRGVza3RvcC9EZXZfU3R1ZmYvcXVpem5vdy9iYWNrZW5kL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdCdcblxuY29uc3QgdXNlciA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBVc2VyID0gc2VxdWVsaXplLmRlZmluZSgndXNlcicsIHtcbiAgICB1c2VybmFtZToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgIHVuaXF1ZTogdHJ1ZSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICB2YWxpZGF0ZToge1xuICAgICAgICBub3RFbXB0eTogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBlbWFpbDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgIHVuaXF1ZTogdHJ1ZSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICB2YWxpZGF0ZToge1xuICAgICAgICBub3RFbXB0eTogdHJ1ZSxcbiAgICAgICAgaXNFbWFpbDogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICB2YWxpZGF0ZToge1xuICAgICAgICBub3RFbXB0eTogdHJ1ZSxcbiAgICAgICAgbGVuOiBbNywgNDJdLFxuICAgICAgfSxcbiAgICB9LFxuICAgIHJvbGU6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgfSxcbiAgfSk7XG5cbiAgVXNlci5hc3NvY2lhdGUgPSBtb2RlbHMgPT4ge1xuICAgIFVzZXIuaGFzTWFueShtb2RlbHMuTWVzc2FnZSwgeyBvbkRlbGV0ZTogJ0NBU0NBREUnIH0pO1xuICB9O1xuXG4gIFVzZXIuZmluZEJ5TG9naW4gPSBhc3luYyBsb2dpbiA9PiB7XG4gICAgbGV0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRPbmUoe1xuICAgICAgd2hlcmU6IHsgdXNlcm5hbWU6IGxvZ2luIH0sXG4gICAgfSk7XG5cbiAgICBpZiAoIXVzZXIpIHtcbiAgICAgIHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRPbmUoe1xuICAgICAgICB3aGVyZTogeyBlbWFpbDogbG9naW4gfSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB1c2VyO1xuICB9O1xuXG4gIFVzZXIuYmVmb3JlQ3JlYXRlKGFzeW5jIHVzZXIgPT4ge1xuICAgIHVzZXIucGFzc3dvcmQgPSBhd2FpdCB1c2VyLmdlbmVyYXRlUGFzc3dvcmRIYXNoKCk7XG4gIH0pO1xuXG4gIFVzZXIucHJvdG90eXBlLmdlbmVyYXRlUGFzc3dvcmRIYXNoID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHNhbHRSb3VuZHMgPSAxMDtcbiAgICByZXR1cm4gYXdhaXQgYmNyeXB0Lmhhc2godGhpcy5wYXNzd29yZCwgc2FsdFJvdW5kcyk7XG4gIH07XG5cbiAgVXNlci5wcm90b3R5cGUudmFsaWRhdGVQYXNzd29yZCA9IGFzeW5jIGZ1bmN0aW9uKHBhc3N3b3JkKSB7XG4gICAgcmV0dXJuIGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCB0aGlzLnBhc3N3b3JkKTtcbiAgfTtcblxuICByZXR1cm4gVXNlcjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "user",
        "sequelize",
        "DataTypes",
        "User",
        "define",
        "username",
        "type",
        "STRING",
        "unique",
        "allowNull",
        "validate",
        "notEmpty",
        "email",
        "isEmail",
        "password",
        "len",
        "role",
        "associate",
        "models",
        "hasMany",
        "Message",
        "onDelete",
        "findByLogin",
        "login",
        "findOne",
        "where",
        "beforeCreate",
        "generatePasswordHash",
        "prototype",
        "saltRounds",
        "bcrypt",
        "hash",
        "validatePassword",
        "compare"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models",
      "sourcesContent": [
        "import bcrypt from 'bcrypt'\n\nconst user = (sequelize, DataTypes) => {\n  const User = sequelize.define('user', {\n    username: {\n      type: DataTypes.STRING,\n      unique: true,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n      },\n    },\n    email: {\n      type: DataTypes.STRING,\n      unique: true,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        isEmail: true,\n      },\n    },\n    password: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        len: [7, 42],\n      },\n    },\n    role: {\n      type: DataTypes.STRING,\n    },\n  });\n\n  User.associate = models => {\n    User.hasMany(models.Message, { onDelete: 'CASCADE' });\n  };\n\n  User.findByLogin = async login => {\n    let user = await User.findOne({\n      where: { username: login },\n    });\n\n    if (!user) {\n      user = await User.findOne({\n        where: { email: login },\n      });\n    }\n\n    return user;\n  };\n\n  User.beforeCreate(async user => {\n    user.password = await user.generatePasswordHash();\n  });\n\n  User.prototype.generatePasswordHash = async function () {\n    const saltRounds = 10;\n    return await bcrypt.hash(this.password, saltRounds);\n  };\n\n  User.prototype.validatePassword = async function(password) {\n    return await bcrypt.compare(password, this.password);\n  };\n\n  return User;\n};\n\nexport default user;"
      ]
    },
    "sourceType": "script",
    "mtime": 1556126695006
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/message.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/message.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/message.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models/message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models",
        "sourceFileName": "message.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar message = function message(sequelize, DataTypes) {\n  var Message = sequelize.define('message', {\n    text: {\n      type: DataTypes.STRING,\n      validate: {\n        notEmpty: {\n          args: true,\n          msg: 'You need to enter text to send a message!'\n        }\n      }\n    }\n  });\n\n  Message.associate = function (models) {\n    Message.belongsTo(models.User);\n  };\n\n  return Message;\n};\n\nvar _default = message;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UuanMiXSwibmFtZXMiOlsibWVzc2FnZSIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIk1lc3NhZ2UiLCJkZWZpbmUiLCJ0ZXh0IiwidHlwZSIsIlNUUklORyIsInZhbGlkYXRlIiwibm90RW1wdHkiLCJhcmdzIiwibXNnIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQU1BLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN4QyxNQUFNQyxPQUFPLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixTQUFqQixFQUE0QjtBQUMxQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxNQURaO0FBRUpDLE1BQUFBLFFBQVEsRUFBRTtBQUNSQyxRQUFBQSxRQUFRLEVBQUU7QUFDUkMsVUFBQUEsSUFBSSxFQUFFLElBREU7QUFFUkMsVUFBQUEsR0FBRyxFQUFFO0FBRkc7QUFERjtBQUZOO0FBRG9DLEdBQTVCLENBQWhCOztBQVlBUixFQUFBQSxPQUFPLENBQUNTLFNBQVIsR0FBb0IsVUFBQUMsTUFBTSxFQUFJO0FBQzVCVixJQUFBQSxPQUFPLENBQUNXLFNBQVIsQ0FBa0JELE1BQU0sQ0FBQ0UsSUFBekI7QUFDRCxHQUZEOztBQUlBLFNBQU9aLE9BQVA7QUFDRCxDQWxCRDs7ZUFvQmVILE8iLCJzb3VyY2VSb290IjoiL1VzZXJzL3JjaG93ZGh1cnkvRGVza3RvcC9EZXZfU3R1ZmYvcXVpem5vdy9iYWNrZW5kL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtZXNzYWdlID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IE1lc3NhZ2UgPSBzZXF1ZWxpemUuZGVmaW5lKCdtZXNzYWdlJywge1xuICAgIHRleHQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICB2YWxpZGF0ZTogeyBcbiAgICAgICAgbm90RW1wdHk6IHtcbiAgICAgICAgICBhcmdzOiB0cnVlLFxuICAgICAgICAgIG1zZzogJ1lvdSBuZWVkIHRvIGVudGVyIHRleHQgdG8gc2VuZCBhIG1lc3NhZ2UhJ1xuICAgICAgICB9IFxuICAgICAgfSxcbiAgICB9LFxuICB9KTtcblxuICBNZXNzYWdlLmFzc29jaWF0ZSA9IG1vZGVscyA9PiB7XG4gICAgTWVzc2FnZS5iZWxvbmdzVG8obW9kZWxzLlVzZXIpO1xuICB9O1xuXG4gIHJldHVybiBNZXNzYWdlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWVzc2FnZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "message.js"
      ],
      "names": [
        "message",
        "sequelize",
        "DataTypes",
        "Message",
        "define",
        "text",
        "type",
        "STRING",
        "validate",
        "notEmpty",
        "args",
        "msg",
        "associate",
        "models",
        "belongsTo",
        "User"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AACxC,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADZ;AAEJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE,IADE;AAERC,UAAAA,GAAG,EAAE;AAFG;AADF;AAFN;AADoC,GAA5B,CAAhB;;AAYAR,EAAAA,OAAO,CAACS,SAAR,GAAoB,UAAAC,MAAM,EAAI;AAC5BV,IAAAA,OAAO,CAACW,SAAR,CAAkBD,MAAM,CAACE,IAAzB;AACD,GAFD;;AAIA,SAAOZ,OAAP;AACD,CAlBD;;eAoBeH,O",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/models",
      "sourcesContent": [
        "const message = (sequelize, DataTypes) => {\n  const Message = sequelize.define('message', {\n    text: {\n      type: DataTypes.STRING,\n      validate: { \n        notEmpty: {\n          args: true,\n          msg: 'You need to enter text to send a message!'\n        } \n      },\n    },\n  });\n\n  Message.associate = models => {\n    Message.belongsTo(models.User);\n  };\n\n  return Message;\n};\n\nexport default message;"
      ]
    },
    "sourceType": "script",
    "mtime": 1555638066403
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/authorization.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/authorization.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/authorization.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers/authorization.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
        "sourceFileName": "authorization.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMessageOwner = exports.isAdmin = exports.isAuthenticated = void 0;\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar isAuthenticated = function isAuthenticated(parent, args, _ref) {\n  var me = _ref.me;\n  return me ? _graphqlResolvers.skip : new _apolloServer.ForbiddenError('Not Authenticated as user');\n};\n\nexports.isAuthenticated = isAuthenticated;\nvar isAdmin = (0, _graphqlResolvers.combineResolvers)(isAuthenticated, function (parent, args, _ref2) {\n  var role = _ref2.me.role;\n  return role === 'ADMIN' ? _graphqlResolvers.skip : new _apolloServer.ForbiddenError('Not authorized as admin.');\n});\nexports.isAdmin = isAdmin;\n\nvar isMessageOwner =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(parent, _ref3, _ref4) {\n    var id, models, me, message;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = _ref3.id;\n            models = _ref4.models, me = _ref4.me;\n            _context.next = 4;\n            return models.Message.findByPk(id, {\n              raw: true\n            });\n\n          case 4:\n            message = _context.sent;\n\n            if (!(message.userId !== me.id)) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new _apolloServer.ForbiddenError('Not authenticated as owner.');\n\n          case 7:\n            return _context.abrupt(\"return\", _graphqlResolvers.skip);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function isMessageOwner(_x, _x2, _x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.isMessageOwner = isMessageOwner;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhvcml6YXRpb24uanMiXSwibmFtZXMiOlsiaXNBdXRoZW50aWNhdGVkIiwicGFyZW50IiwiYXJncyIsIm1lIiwic2tpcCIsIkZvcmJpZGRlbkVycm9yIiwiaXNBZG1pbiIsInJvbGUiLCJpc01lc3NhZ2VPd25lciIsImlkIiwibW9kZWxzIiwiTWVzc2FnZSIsImZpbmRCeVBrIiwicmF3IiwibWVzc2FnZSIsInVzZXJJZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7QUFFTyxJQUFNQSxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQUNDLE1BQUQsRUFBU0MsSUFBVDtBQUFBLE1BQWlCQyxFQUFqQixRQUFpQkEsRUFBakI7QUFBQSxTQUMzQkEsRUFBRSxHQUFHQyxzQkFBSCxHQUFVLElBQUlDLDRCQUFKLENBQW1CLDJCQUFuQixDQURlO0FBQUEsQ0FBeEI7OztBQUdBLElBQU1DLE9BQU8sR0FBRyx3Q0FDbkJOLGVBRG1CLEVBRW5CLFVBQUNDLE1BQUQsRUFBU0MsSUFBVDtBQUFBLE1BQXVCSyxJQUF2QixTQUFpQkosRUFBakIsQ0FBdUJJLElBQXZCO0FBQUEsU0FDSUEsSUFBSSxLQUFLLE9BQVQsR0FDRUgsc0JBREYsR0FFRSxJQUFJQyw0QkFBSixDQUFtQiwwQkFBbkIsQ0FITjtBQUFBLENBRm1CLENBQWhCOzs7QUFRQSxJQUFNRyxjQUFjO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBRyxpQkFDMUJQLE1BRDBCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUV4QlEsWUFBQUEsRUFGd0IsU0FFeEJBLEVBRndCO0FBR3hCQyxZQUFBQSxNQUh3QixTQUd4QkEsTUFId0IsRUFHaEJQLEVBSGdCLFNBR2hCQSxFQUhnQjtBQUFBO0FBQUEsbUJBS0pPLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxRQUFmLENBQXdCSCxFQUF4QixFQUE0QjtBQUFFSSxjQUFBQSxHQUFHLEVBQUU7QUFBUCxhQUE1QixDQUxJOztBQUFBO0FBS3BCQyxZQUFBQSxPQUxvQjs7QUFBQSxrQkFPdkJBLE9BQU8sQ0FBQ0MsTUFBUixLQUFtQlosRUFBRSxDQUFDTSxFQVBDO0FBQUE7QUFBQTtBQUFBOztBQUFBLGtCQVFoQixJQUFJSiw0QkFBSixDQUFtQiw2QkFBbkIsQ0FSZ0I7O0FBQUE7QUFBQSw2Q0FVbkJELHNCQVZtQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFkSSxjQUFjO0FBQUE7QUFBQTtBQUFBLEdBQXBCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yY2hvd2RodXJ5L0Rlc2t0b3AvRGV2X1N0dWZmL3F1aXpub3cvYmFja2VuZC9zcmMvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9yYmlkZGVuRXJyb3IgfSBmcm9tICdhcG9sbG8tc2VydmVyJztcbmltcG9ydCB7IGNvbWJpbmVSZXNvbHZlcnMsIHNraXAgfSBmcm9tICdncmFwaHFsLXJlc29sdmVycydcblxuZXhwb3J0IGNvbnN0IGlzQXV0aGVudGljYXRlZCA9IChwYXJlbnQsIGFyZ3MsIHsgbWUgfSkgPT5cbiAgICBtZSA/IHNraXAgOiBuZXcgRm9yYmlkZGVuRXJyb3IoJ05vdCBBdXRoZW50aWNhdGVkIGFzIHVzZXInKVxuXG5leHBvcnQgY29uc3QgaXNBZG1pbiA9IGNvbWJpbmVSZXNvbHZlcnMoXG4gICAgaXNBdXRoZW50aWNhdGVkLFxuICAgIChwYXJlbnQsIGFyZ3MsIHsgbWU6IHsgcm9sZSB9IH0pID0+XG4gICAgICAgIHJvbGUgPT09ICdBRE1JTidcbiAgICAgICAgPyBza2lwXG4gICAgICAgIDogbmV3IEZvcmJpZGRlbkVycm9yKCdOb3QgYXV0aG9yaXplZCBhcyBhZG1pbi4nKSxcbik7XG5cbmV4cG9ydCBjb25zdCBpc01lc3NhZ2VPd25lciA9IGFzeW5jKFxuICAgIHBhcmVudCxcbiAgICB7IGlkIH0sXG4gICAgeyBtb2RlbHMsIG1lIH0sXG4pID0+IHtcbiAgICBjb25zdCBtZXNzYWdlID0gYXdhaXQgbW9kZWxzLk1lc3NhZ2UuZmluZEJ5UGsoaWQsIHsgcmF3OiB0cnVlIH0pO1xuXG4gICAgaWYobWVzc2FnZS51c2VySWQgIT09IG1lLmlkKSB7XG4gICAgICAgIHRocm93IG5ldyBGb3JiaWRkZW5FcnJvcignTm90IGF1dGhlbnRpY2F0ZWQgYXMgb3duZXIuJyk7XG4gICAgfVxuICAgIHJldHVybiBza2lwO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "authorization.js"
      ],
      "names": [
        "isAuthenticated",
        "parent",
        "args",
        "me",
        "skip",
        "ForbiddenError",
        "isAdmin",
        "role",
        "isMessageOwner",
        "id",
        "models",
        "Message",
        "findByPk",
        "raw",
        "message",
        "userId"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,IAAT;AAAA,MAAiBC,EAAjB,QAAiBA,EAAjB;AAAA,SAC3BA,EAAE,GAAGC,sBAAH,GAAU,IAAIC,4BAAJ,CAAmB,2BAAnB,CADe;AAAA,CAAxB;;;AAGA,IAAMC,OAAO,GAAG,wCACnBN,eADmB,EAEnB,UAACC,MAAD,EAASC,IAAT;AAAA,MAAuBK,IAAvB,SAAiBJ,EAAjB,CAAuBI,IAAvB;AAAA,SACIA,IAAI,KAAK,OAAT,GACEH,sBADF,GAEE,IAAIC,4BAAJ,CAAmB,0BAAnB,CAHN;AAAA,CAFmB,CAAhB;;;AAQA,IAAMG,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAC1BP,MAD0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAExBQ,YAAAA,EAFwB,SAExBA,EAFwB;AAGxBC,YAAAA,MAHwB,SAGxBA,MAHwB,EAGhBP,EAHgB,SAGhBA,EAHgB;AAAA;AAAA,mBAKJO,MAAM,CAACC,OAAP,CAAeC,QAAf,CAAwBH,EAAxB,EAA4B;AAAEI,cAAAA,GAAG,EAAE;AAAP,aAA5B,CALI;;AAAA;AAKpBC,YAAAA,OALoB;;AAAA,kBAOvBA,OAAO,CAACC,MAAR,KAAmBZ,EAAE,CAACM,EAPC;AAAA;AAAA;AAAA;;AAAA,kBAQhB,IAAIJ,4BAAJ,CAAmB,6BAAnB,CARgB;;AAAA;AAAA,6CAUnBD,sBAVmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdI,cAAc;AAAA;AAAA;AAAA,GAApB",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/backend/src/resolvers",
      "sourcesContent": [
        "import { ForbiddenError } from 'apollo-server';\nimport { combineResolvers, skip } from 'graphql-resolvers'\n\nexport const isAuthenticated = (parent, args, { me }) =>\n    me ? skip : new ForbiddenError('Not Authenticated as user')\n\nexport const isAdmin = combineResolvers(\n    isAuthenticated,\n    (parent, args, { me: { role } }) =>\n        role === 'ADMIN'\n        ? skip\n        : new ForbiddenError('Not authorized as admin.'),\n);\n\nexport const isMessageOwner = async(\n    parent,\n    { id },\n    { models, me },\n) => {\n    const message = await models.Message.findByPk(id, { raw: true });\n\n    if(message.userId !== me.id) {\n        throw new ForbiddenError('Not authenticated as owner.');\n    }\n    return skip;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1556126871558
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import 'dotenv/config';\nimport cors from 'cors';\nimport uuidv4 from 'uuid/v4';\nimport jwt from 'jsonwebtoken';\nimport express from 'express';\nimport { ApolloServer, AuthenticationError } from 'apollo-server-express';\nimport schema from './schema';\nimport resolvers from './resolvers';\nimport models, { sequelize } from './models';\nconst app = express();\napp.use(cors());\n\nconst getMe = async req => {\n  const token = req.headers['x-token'];\n\n  if (token) {\n    try {\n      return await jwt.verify(token, process.env.SECRET);\n    } catch (e) {\n      throw new AuthenticationError('Your session expired. Sign in again.');\n    }\n  }\n};\n\nconst server = new ApolloServer({\n  typeDefs: schema,\n  resolvers,\n  formatError: error => {\n    // remove the internal sequelize error message\n    // leave only the important validation error\n    const message = error.message.replace('SequelizeValidationError: ', '').replace('Validation error: ', '');\n    return { ...error,\n      message\n    };\n  },\n  context: async ({\n    req\n  }) => {\n    const me = await getMe(req);\n    return {\n      models,\n      me,\n      secret: process.env.SECRET\n    };\n  }\n});\nserver.applyMiddleware({\n  app,\n  path: '/graphql'\n});\nconst eraseDatabaseOnSync = true;\nsequelize.sync({\n  force: eraseDatabaseOnSync\n}).then(async () => {\n  if (eraseDatabaseOnSync) {\n    await createUsersWithMessages(new Date());\n  }\n\n  app.listen({\n    port: 8000\n  }, () => {\n    console.log('Apollo Server on http://localhost:8000/graphql');\n  });\n});\n\nconst createUsersWithMessages = async date => {\n  await models.User.create({\n    username: 'rchowdhury',\n    email: 'hello@rahat.com',\n    password: 'rchowdhury',\n    role: 'ADMIN',\n    messages: [{\n      text: 'I\\'m Hackerman',\n      createdAt: date.setSeconds(date.getSeconds() + 1)\n    }]\n  }, {\n    include: [models.Message]\n  });\n  await models.User.create({\n    username: 'hkhan',\n    email: 'hello@khan.com',\n    password: 'hkhan123',\n    messages: [{\n      text: 'I love pizza!',\n      createdAt: date.setSeconds(date.getSeconds() + 1)\n    }, {\n      text: 'Stop eating chocolate!',\n      createdAt: date.setSeconds(date.getSeconds() + 1)\n    }]\n  }, {\n    include: [models.Message]\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvcnMiLCJ1dWlkdjQiLCJqd3QiLCJleHByZXNzIiwiQXBvbGxvU2VydmVyIiwiQXV0aGVudGljYXRpb25FcnJvciIsInNjaGVtYSIsInJlc29sdmVycyIsIm1vZGVscyIsInNlcXVlbGl6ZSIsImFwcCIsInVzZSIsImdldE1lIiwicmVxIiwidG9rZW4iLCJoZWFkZXJzIiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVCIsImUiLCJzZXJ2ZXIiLCJ0eXBlRGVmcyIsImZvcm1hdEVycm9yIiwiZXJyb3IiLCJtZXNzYWdlIiwicmVwbGFjZSIsImNvbnRleHQiLCJtZSIsInNlY3JldCIsImFwcGx5TWlkZGxld2FyZSIsInBhdGgiLCJlcmFzZURhdGFiYXNlT25TeW5jIiwic3luYyIsImZvcmNlIiwidGhlbiIsImNyZWF0ZVVzZXJzV2l0aE1lc3NhZ2VzIiwiRGF0ZSIsImxpc3RlbiIsInBvcnQiLCJjb25zb2xlIiwibG9nIiwiZGF0ZSIsIlVzZXIiLCJjcmVhdGUiLCJ1c2VybmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJyb2xlIiwibWVzc2FnZXMiLCJ0ZXh0IiwiY3JlYXRlZEF0Iiwic2V0U2Vjb25kcyIsImdldFNlY29uZHMiLCJpbmNsdWRlIiwiTWVzc2FnZSJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxlQUFQO0FBQ0EsT0FBT0EsSUFBUCxNQUFpQixNQUFqQjtBQUNBLE9BQU9DLE1BQVAsTUFBbUIsU0FBbkI7QUFDQSxPQUFPQyxHQUFQLE1BQWdCLGNBQWhCO0FBQ0EsT0FBT0MsT0FBUCxNQUFvQixTQUFwQjtBQUNBLFNBQ0VDLFlBREYsRUFFRUMsbUJBRkYsUUFHTyx1QkFIUDtBQUtBLE9BQU9DLE1BQVAsTUFBbUIsVUFBbkI7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLGFBQXRCO0FBQ0EsT0FBT0MsTUFBUCxJQUFpQkMsU0FBakIsUUFBa0MsVUFBbEM7QUFFQSxNQUFNQyxHQUFHLEdBQUdQLE9BQU8sRUFB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RUMsSUFBQUEsUUFBUSxFQUFFLFVBSFo7QUFJRUUsSUFBQUEsUUFBUSxFQUFFLENBQ1I7QUFDRUMsTUFBQUEsSUFBSSxFQUFFLGVBRFI7QUFFRUMsTUFBQUEsU0FBUyxFQUFFVCxJQUFJLENBQUNVLFVBQUwsQ0FBZ0JWLElBQUksQ0FBQ1csVUFBTCxLQUFvQixDQUFwQztBQUZiLEtBRFEsRUFLUjtBQUNFSCxNQUFBQSxJQUFJLEVBQUUsd0JBRFI7QUFFRUMsTUFBQUEsU0FBUyxFQUFFVCxJQUFJLENBQUNVLFVBQUwsQ0FBZ0JWLElBQUksQ0FBQ1csVUFBTCxLQUFvQixDQUFwQztBQUZiLEtBTFE7QUFKWixHQURJLEVBZ0JKO0FBQ0VDLElBQUFBLE9BQU8sRUFBRSxDQUFDOUMsTUFBTSxDQUFDK0MsT0FBUjtBQURYLEdBaEJJLENBQU47QUFvQkQsQ0F2Q0QiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JjaG93ZGh1cnkvRGVza3RvcC9EZXZfU3R1ZmYvcXVpem5vdy9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2RvdGVudi9jb25maWcnO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5pbXBvcnQgdXVpZHY0IGZyb20gJ3V1aWQvdjQnO1xuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge1xuICBBcG9sbG9TZXJ2ZXIsXG4gIEF1dGhlbnRpY2F0aW9uRXJyb3IsXG59IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmltcG9ydCBzY2hlbWEgZnJvbSAnLi9zY2hlbWEnO1xuaW1wb3J0IHJlc29sdmVycyBmcm9tICcuL3Jlc29sdmVycyc7XG5pbXBvcnQgbW9kZWxzLCB7IHNlcXVlbGl6ZSB9IGZyb20gJy4vbW9kZWxzJztcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKGNvcnMoKSk7XG5cbmNvbnN0IGdldE1lID0gYXN5bmMgcmVxID0+IHtcbiAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVyc1sneC10b2tlbiddO1xuXG4gIGlmICh0b2tlbikge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gYXdhaXQgand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuU0VDUkVUKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aHJvdyBuZXcgQXV0aGVudGljYXRpb25FcnJvcihcbiAgICAgICAgJ1lvdXIgc2Vzc2lvbiBleHBpcmVkLiBTaWduIGluIGFnYWluLicsXG4gICAgICApO1xuICAgIH1cbiAgfVxufTtcblxuY29uc3Qgc2VydmVyID0gbmV3IEFwb2xsb1NlcnZlcih7XG4gIHR5cGVEZWZzOiBzY2hlbWEsXG4gIHJlc29sdmVycyxcbiAgZm9ybWF0RXJyb3I6IGVycm9yID0+IHtcbiAgICAvLyByZW1vdmUgdGhlIGludGVybmFsIHNlcXVlbGl6ZSBlcnJvciBtZXNzYWdlXG4gICAgLy8gbGVhdmUgb25seSB0aGUgaW1wb3J0YW50IHZhbGlkYXRpb24gZXJyb3JcbiAgICBjb25zdCBtZXNzYWdlID0gZXJyb3IubWVzc2FnZVxuICAgICAgLnJlcGxhY2UoJ1NlcXVlbGl6ZVZhbGlkYXRpb25FcnJvcjogJywgJycpXG4gICAgICAucmVwbGFjZSgnVmFsaWRhdGlvbiBlcnJvcjogJywgJycpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLmVycm9yLFxuICAgICAgbWVzc2FnZSxcbiAgICB9O1xuICB9LFxuICBjb250ZXh0OiBhc3luYyAoeyByZXEgfSkgPT4ge1xuICAgIGNvbnN0IG1lID0gYXdhaXQgZ2V0TWUocmVxKTtcblxuICAgIHJldHVybiB7XG4gICAgICBtb2RlbHMsXG4gICAgICBtZSxcbiAgICAgIHNlY3JldDogcHJvY2Vzcy5lbnYuU0VDUkVULFxuICAgIH07XG4gIH0sXG59KTtcblxuc2VydmVyLmFwcGx5TWlkZGxld2FyZSh7IGFwcCwgcGF0aDogJy9ncmFwaHFsJyB9KTtcblxuY29uc3QgZXJhc2VEYXRhYmFzZU9uU3luYyA9IHRydWU7XG5cbnNlcXVlbGl6ZS5zeW5jKHsgZm9yY2U6IGVyYXNlRGF0YWJhc2VPblN5bmMgfSkudGhlbihhc3luYyAoKSA9PiB7XG4gIGlmIChlcmFzZURhdGFiYXNlT25TeW5jKSB7XG4gICAgYXdhaXQgY3JlYXRlVXNlcnNXaXRoTWVzc2FnZXMobmV3IERhdGUoKSk7XG4gIH1cblxuICBhcHAubGlzdGVuKHsgcG9ydDogODAwMCB9LCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0Fwb2xsbyBTZXJ2ZXIgb24gaHR0cDovL2xvY2FsaG9zdDo4MDAwL2dyYXBocWwnKTtcbiAgfSk7XG59KTtcblxuY29uc3QgY3JlYXRlVXNlcnNXaXRoTWVzc2FnZXMgPSBhc3luYyBkYXRlID0+IHsgXG4gIGF3YWl0IG1vZGVscy5Vc2VyLmNyZWF0ZShcbiAgICB7XG4gICAgICB1c2VybmFtZTogJ3JjaG93ZGh1cnknLFxuICAgICAgZW1haWw6ICdoZWxsb0ByYWhhdC5jb20nLFxuICAgICAgcGFzc3dvcmQ6ICdyY2hvd2RodXJ5JyxcbiAgICAgIHJvbGU6ICdBRE1JTicsXG4gICAgICBtZXNzYWdlczogW1xuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ0lcXCdtIEhhY2tlcm1hbicsXG4gICAgICAgICAgY3JlYXRlZEF0OiBkYXRlLnNldFNlY29uZHMoZGF0ZS5nZXRTZWNvbmRzKCkgKyAxKSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7XG4gICAgICBpbmNsdWRlOiBbbW9kZWxzLk1lc3NhZ2VdLFxuICAgIH0sXG4gICk7XG4gICAgXG4gIGF3YWl0IG1vZGVscy5Vc2VyLmNyZWF0ZShcbiAgICB7XG4gICAgICB1c2VybmFtZTogJ2hraGFuJyxcbiAgICAgIGVtYWlsOiAnaGVsbG9Aa2hhbi5jb20nLFxuICAgICAgcGFzc3dvcmQ6ICdoa2hhbjEyMycsXG4gICAgICBtZXNzYWdlczogW1xuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ0kgbG92ZSBwaXp6YSEnLFxuICAgICAgICAgIGNyZWF0ZWRBdDogZGF0ZS5zZXRTZWNvbmRzKGRhdGUuZ2V0U2Vjb25kcygpICsgMSksXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICB0ZXh0OiAnU3RvcCBlYXRpbmcgY2hvY29sYXRlIScsXG4gICAgICAgICAgY3JlYXRlZEF0OiBkYXRlLnNldFNlY29uZHMoZGF0ZS5nZXRTZWNvbmRzKCkgKyAxKSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7XG4gICAgICBpbmNsdWRlOiBbbW9kZWxzLk1lc3NhZ2VdLFxuICAgIH0sXG4gICk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "cors",
        "uuidv4",
        "jwt",
        "express",
        "ApolloServer",
        "AuthenticationError",
        "schema",
        "resolvers",
        "models",
        "sequelize",
        "app",
        "use",
        "getMe",
        "req",
        "token",
        "headers",
        "verify",
        "process",
        "env",
        "SECRET",
        "e",
        "server",
        "typeDefs",
        "formatError",
        "error",
        "message",
        "replace",
        "context",
        "me",
        "secret",
        "applyMiddleware",
        "path",
        "eraseDatabaseOnSync",
        "sync",
        "force",
        "then",
        "createUsersWithMessages",
        "Date",
        "listen",
        "port",
        "console",
        "log",
        "date",
        "User",
        "create",
        "username",
        "email",
        "password",
        "role",
        "messages",
        "text",
        "createdAt",
        "setSeconds",
        "getSeconds",
        "include",
        "Message"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src",
      "sourcesContent": [
        "import 'dotenv/config';\nimport cors from 'cors';\nimport uuidv4 from 'uuid/v4';\nimport jwt from 'jsonwebtoken';\nimport express from 'express';\nimport {\n  ApolloServer,\n  AuthenticationError,\n} from 'apollo-server-express';\n\nimport schema from './schema';\nimport resolvers from './resolvers';\nimport models, { sequelize } from './models';\n\nconst app = express();\n\napp.use(cors());\n\nconst getMe = async req => {\n  const token = req.headers['x-token'];\n\n  if (token) {\n    try {\n      return await jwt.verify(token, process.env.SECRET);\n    } catch (e) {\n      throw new AuthenticationError(\n        'Your session expired. Sign in again.',\n      );\n    }\n  }\n};\n\nconst server = new ApolloServer({\n  typeDefs: schema,\n  resolvers,\n  formatError: error => {\n    // remove the internal sequelize error message\n    // leave only the important validation error\n    const message = error.message\n      .replace('SequelizeValidationError: ', '')\n      .replace('Validation error: ', '');\n\n    return {\n      ...error,\n      message,\n    };\n  },\n  context: async ({ req }) => {\n    const me = await getMe(req);\n\n    return {\n      models,\n      me,\n      secret: process.env.SECRET,\n    };\n  },\n});\n\nserver.applyMiddleware({ app, path: '/graphql' });\n\nconst eraseDatabaseOnSync = true;\n\nsequelize.sync({ force: eraseDatabaseOnSync }).then(async () => {\n  if (eraseDatabaseOnSync) {\n    await createUsersWithMessages(new Date());\n  }\n\n  app.listen({ port: 8000 }, () => {\n    console.log('Apollo Server on http://localhost:8000/graphql');\n  });\n});\n\nconst createUsersWithMessages = async date => { \n  await models.User.create(\n    {\n      username: 'rchowdhury',\n      email: 'hello@rahat.com',\n      password: 'rchowdhury',\n      role: 'ADMIN',\n      messages: [\n        {\n          text: 'I\\'m Hackerman',\n          createdAt: date.setSeconds(date.getSeconds() + 1),\n        },\n      ],\n    },\n    {\n      include: [models.Message],\n    },\n  );\n    \n  await models.User.create(\n    {\n      username: 'hkhan',\n      email: 'hello@khan.com',\n      password: 'hkhan123',\n      messages: [\n        {\n          text: 'I love pizza!',\n          createdAt: date.setSeconds(date.getSeconds() + 1),\n        },\n        {\n          text: 'Stop eating chocolate!',\n          createdAt: date.setSeconds(date.getSeconds() + 1),\n        },\n      ],\n    },\n    {\n      include: [models.Message],\n    },\n  );\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1556133378314
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nvar _resolvers = _interopRequireDefault(require(\"./resolvers\"));\n\nvar _models = _interopRequireWildcard(require(\"./models\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst app = (0, _express.default)();\napp.use((0, _cors.default)());\n\nconst getMe = async req => {\n  const token = req.headers['x-token'];\n\n  if (token) {\n    try {\n      return await _jsonwebtoken.default.verify(token, process.env.SECRET);\n    } catch (e) {\n      throw new _apolloServerExpress.AuthenticationError('Your session expired. Sign in again.');\n    }\n  }\n};\n\nconst server = new _apolloServerExpress.ApolloServer({\n  introspection: true,\n  playground: true,\n  typeDefs: _schema.default,\n  resolvers: _resolvers.default,\n  formatError: error => {\n    // remove the internal sequelize error message\n    // leave only the important validation error\n    const message = error.message.replace('SequelizeValidationError: ', '').replace('Validation error: ', '');\n    return { ...error,\n      message\n    };\n  },\n  context: async ({\n    req\n  }) => {\n    const me = await getMe(req);\n    return {\n      models: _models.default,\n      me,\n      secret: process.env.SECRET\n    };\n  }\n});\nserver.applyMiddleware({\n  app,\n  path: '/graphql'\n});\n\nconst httpServer = _http.default.createServer(app);\n\nserver.installSubscriptionHandlers(httpServer);\nconst eraseDatabaseOnSync = true;\nconst isProduction = !!process.env.DATABASE_URL;\nconst port = process.env.PORT || 8000;\n\n_models.sequelize.sync({\n  force: eraseDatabaseOnSync || isProduction\n}).then(async () => {\n  if (eraseDatabaseOnSync || isProduction) {\n    createUsersWithMessages(new Date());\n  }\n\n  httpServer.listen({\n    port\n  }, () => {\n    console.log(`Apollo Server on http://localhost:${port}/graphql`);\n  });\n});\n\nconst createUsersWithMessages = async date => {\n  await _models.default.User.create({\n    username: 'rchowdhury',\n    email: 'hello@rahat.com',\n    password: 'rchowdhury',\n    role: 'ADMIN',\n    messages: [{\n      text: 'I\\'m Hackerman',\n      createdAt: date.setSeconds(date.getSeconds() + 1)\n    }]\n  }, {\n    include: [_models.default.Message]\n  });\n  await _models.default.User.create({\n    username: 'hkhan',\n    email: 'hello@khan.com',\n    password: 'hkhan123',\n    messages: [{\n      text: 'I love pizza!',\n      createdAt: date.setSeconds(date.getSeconds() + 1)\n    }, {\n      text: 'Stop eating chocolate!',\n      createdAt: date.setSeconds(date.getSeconds() + 1)\n    }]\n  }, {\n    include: [_models.default.Message]\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "getMe",
        "req",
        "token",
        "headers",
        "jwt",
        "verify",
        "process",
        "env",
        "SECRET",
        "e",
        "AuthenticationError",
        "server",
        "ApolloServer",
        "introspection",
        "playground",
        "typeDefs",
        "schema",
        "resolvers",
        "formatError",
        "error",
        "message",
        "replace",
        "context",
        "me",
        "models",
        "secret",
        "applyMiddleware",
        "path",
        "httpServer",
        "http",
        "createServer",
        "installSubscriptionHandlers",
        "eraseDatabaseOnSync",
        "isProduction",
        "DATABASE_URL",
        "port",
        "PORT",
        "sequelize",
        "sync",
        "force",
        "then",
        "createUsersWithMessages",
        "Date",
        "listen",
        "console",
        "log",
        "date",
        "User",
        "create",
        "username",
        "email",
        "password",
        "role",
        "messages",
        "text",
        "createdAt",
        "setSeconds",
        "getSeconds",
        "include",
        "Message"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AACA;;;;;;AAEA,MAAMA,GAAG,GAAG,uBAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,oBAAR;;AAEA,MAAMC,KAAK,GAAG,MAAMC,GAAN,IAAa;AACzB,QAAMC,KAAK,GAAGD,GAAG,CAACE,OAAJ,CAAY,SAAZ,CAAd;;AAEA,MAAID,KAAJ,EAAW;AACT,QAAI;AACF,aAAO,MAAME,sBAAIC,MAAJ,CAAWH,KAAX,EAAkBI,OAAO,CAACC,GAAR,CAAYC,MAA9B,CAAb;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV,YAAM,IAAIC,wCAAJ,CACJ,sCADI,CAAN;AAGD;AACF;AACF,CAZD;;AAcA,MAAMC,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAC9BC,EAAAA,aAAa,EAAE,IADe;AAE9BC,EAAAA,UAAU,EAAE,IAFkB;AAG9BC,EAAAA,QAAQ,EAAEC,eAHoB;AAI9BC,EAAAA,SAAS,EAATA,kBAJ8B;AAK9BC,EAAAA,WAAW,EAAEC,KAAK,IAAI;AACpB;AACA;AACA,UAAMC,OAAO,GAAGD,KAAK,CAACC,OAAN,CACbC,OADa,CACL,4BADK,EACyB,EADzB,EAEbA,OAFa,CAEL,oBAFK,EAEiB,EAFjB,CAAhB;AAIA,WAAO,EACL,GAAGF,KADE;AAELC,MAAAA;AAFK,KAAP;AAID,GAhB6B;AAiB9BE,EAAAA,OAAO,EAAE,OAAO;AAAErB,IAAAA;AAAF,GAAP,KAAmB;AAC1B,UAAMsB,EAAE,GAAG,MAAMvB,KAAK,CAACC,GAAD,CAAtB;AAEA,WAAO;AACLuB,MAAAA,MAAM,EAANA,eADK;AAELD,MAAAA,EAFK;AAGLE,MAAAA,MAAM,EAAEnB,OAAO,CAACC,GAAR,CAAYC;AAHf,KAAP;AAKD;AAzB6B,CAAjB,CAAf;AA4BAG,MAAM,CAACe,eAAP,CAAuB;AAAE5B,EAAAA,GAAF;AAAO6B,EAAAA,IAAI,EAAE;AAAb,CAAvB;;AAGA,MAAMC,UAAU,GAAGC,cAAKC,YAAL,CAAkBhC,GAAlB,CAAnB;;AACAa,MAAM,CAACoB,2BAAP,CAAmCH,UAAnC;AAEA,MAAMI,mBAAmB,GAAG,IAA5B;AACA,MAAMC,YAAY,GAAG,CAAC,CAAC3B,OAAO,CAACC,GAAR,CAAY2B,YAAnC;AACA,MAAMC,IAAI,GAAG7B,OAAO,CAACC,GAAR,CAAY6B,IAAZ,IAAoB,IAAjC;;AAEAC,kBAAUC,IAAV,CAAe;AACbC,EAAAA,KAAK,EAAEP,mBAAmB,IAAIC;AADjB,CAAf,EAEGO,IAFH,CAEQ,YAAY;AAClB,MAAIR,mBAAmB,IAAIC,YAA3B,EAAyC;AACvCQ,IAAAA,uBAAuB,CAAC,IAAIC,IAAJ,EAAD,CAAvB;AACD;;AAEDd,EAAAA,UAAU,CAACe,MAAX,CAAkB;AAChBR,IAAAA;AADgB,GAAlB,EAEG,MAAM;AACPS,IAAAA,OAAO,CAACC,GAAR,CAAa,qCAAoCV,IAAK,UAAtD;AACD,GAJD;AAKD,CAZD;;AAcA,MAAMM,uBAAuB,GAAG,MAAMK,IAAN,IAAc;AAC5C,QAAMtB,gBAAOuB,IAAP,CAAYC,MAAZ,CACJ;AACEC,IAAAA,QAAQ,EAAE,YADZ;AAEEC,IAAAA,KAAK,EAAE,iBAFT;AAGEC,IAAAA,QAAQ,EAAE,YAHZ;AAIEC,IAAAA,IAAI,EAAE,OAJR;AAKEC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,IAAI,EAAE,gBADR;AAEEC,MAAAA,SAAS,EAAET,IAAI,CAACU,UAAL,CAAgBV,IAAI,CAACW,UAAL,KAAoB,CAApC;AAFb,KADQ;AALZ,GADI,EAaJ;AACEC,IAAAA,OAAO,EAAE,CAAClC,gBAAOmC,OAAR;AADX,GAbI,CAAN;AAkBA,QAAMnC,gBAAOuB,IAAP,CAAYC,MAAZ,CACJ;AACEC,IAAAA,QAAQ,EAAE,OADZ;AAEEC,IAAAA,KAAK,EAAE,gBAFT;AAGEC,IAAAA,QAAQ,EAAE,UAHZ;AAIEE,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,IAAI,EAAE,eADR;AAEEC,MAAAA,SAAS,EAAET,IAAI,CAACU,UAAL,CAAgBV,IAAI,CAACW,UAAL,KAAoB,CAApC;AAFb,KADQ,EAKR;AACEH,MAAAA,IAAI,EAAE,wBADR;AAEEC,MAAAA,SAAS,EAAET,IAAI,CAACU,UAAL,CAAgBV,IAAI,CAACW,UAAL,KAAoB,CAApC;AAFb,KALQ;AAJZ,GADI,EAgBJ;AACEC,IAAAA,OAAO,EAAE,CAAClC,gBAAOmC,OAAR;AADX,GAhBI,CAAN;AAoBD,CAvCD",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src",
      "sourcesContent": [
        "import 'dotenv/config';\nimport cors from 'cors';\nimport http from 'http';\nimport jwt from 'jsonwebtoken';\nimport express from 'express';\nimport {\n  ApolloServer,\n  AuthenticationError,\n} from 'apollo-server-express';\n\nimport schema from './schema';\nimport resolvers from './resolvers';\nimport models, { sequelize } from './models';\n\nconst app = express();\n\napp.use(cors());\n\nconst getMe = async req => {\n  const token = req.headers['x-token'];\n\n  if (token) {\n    try {\n      return await jwt.verify(token, process.env.SECRET);\n    } catch (e) {\n      throw new AuthenticationError(\n        'Your session expired. Sign in again.',\n      );\n    }\n  }\n};\n\nconst server = new ApolloServer({\n  introspection: true,\n  playground: true,\n  typeDefs: schema,\n  resolvers,\n  formatError: error => {\n    // remove the internal sequelize error message\n    // leave only the important validation error\n    const message = error.message\n      .replace('SequelizeValidationError: ', '')\n      .replace('Validation error: ', '');\n\n    return {\n      ...error,\n      message,\n    };\n  },\n  context: async ({ req }) => {\n    const me = await getMe(req);\n\n    return {\n      models,\n      me,\n      secret: process.env.SECRET,\n    };\n  },\n});\n\nserver.applyMiddleware({ app, path: '/graphql' });\n\n\nconst httpServer = http.createServer(app);\nserver.installSubscriptionHandlers(httpServer);\n\nconst eraseDatabaseOnSync = true;\nconst isProduction = !!process.env.DATABASE_URL;\nconst port = process.env.PORT || 8000;\n\nsequelize.sync({\n  force: eraseDatabaseOnSync || isProduction\n}).then(async () => {\n  if (eraseDatabaseOnSync || isProduction) {\n    createUsersWithMessages(new Date());\n  }\n\n  httpServer.listen({\n    port\n  }, () => {\n    console.log(`Apollo Server on http://localhost:${port}/graphql`);\n  });\n});\n\nconst createUsersWithMessages = async date => { \n  await models.User.create(\n    {\n      username: 'rchowdhury',\n      email: 'hello@rahat.com',\n      password: 'rchowdhury',\n      role: 'ADMIN',\n      messages: [\n        {\n          text: 'I\\'m Hackerman',\n          createdAt: date.setSeconds(date.getSeconds() + 1),\n        },\n      ],\n    },\n    {\n      include: [models.Message],\n    },\n  );\n    \n  await models.User.create(\n    {\n      username: 'hkhan',\n      email: 'hello@khan.com',\n      password: 'hkhan123',\n      messages: [\n        {\n          text: 'I love pizza!',\n          createdAt: date.setSeconds(date.getSeconds() + 1),\n        },\n        {\n          text: 'Stop eating chocolate!',\n          createdAt: date.setSeconds(date.getSeconds() + 1),\n        },\n      ],\n    },\n    {\n      include: [models.Message],\n    },\n  );\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1556153653520
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _user = _interopRequireDefault(require(\"./user\"));\n\nvar _message = _interopRequireDefault(require(\"./message\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst linkSchema = _apolloServerExpress.gql`\n\n  scalar Date\n  \n  type Query {\n    _: Boolean\n  }\n  type Mutation {\n    _: Boolean\n  }\n  type Subscription {\n    _: Boolean\n  }\n`;\nvar _default = [linkSchema, _user.default, _message.default];\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImxpbmtTY2hlbWEiLCJncWwiLCJ1c2VyU2NoZW1hIiwibWVzc2FnZVNjaGVtYSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBOzs7O0FBRUEsTUFBTUEsVUFBVSxHQUFHQyx3QkFBSTs7Ozs7Ozs7Ozs7OztDQUF2QjtlQWVlLENBQUNELFVBQUQsRUFBYUUsYUFBYixFQUF5QkMsZ0JBQXpCLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JjaG93ZGh1cnkvRGVza3RvcC9EZXZfU3R1ZmYvcXVpem5vdy9zcmMvc2NoZW1hIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3FsIH0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJztcblxuaW1wb3J0IHVzZXJTY2hlbWEgZnJvbSAnLi91c2VyJztcbmltcG9ydCBtZXNzYWdlU2NoZW1hIGZyb20gJy4vbWVzc2FnZSc7XG5cbmNvbnN0IGxpbmtTY2hlbWEgPSBncWxgXG5cbiAgc2NhbGFyIERhdGVcbiAgXG4gIHR5cGUgUXVlcnkge1xuICAgIF86IEJvb2xlYW5cbiAgfVxuICB0eXBlIE11dGF0aW9uIHtcbiAgICBfOiBCb29sZWFuXG4gIH1cbiAgdHlwZSBTdWJzY3JpcHRpb24ge1xuICAgIF86IEJvb2xlYW5cbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgW2xpbmtTY2hlbWEsIHVzZXJTY2hlbWEsIG1lc3NhZ2VTY2hlbWFdO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "linkSchema",
        "gql",
        "userSchema",
        "messageSchema"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;;;AAEA,MAAMA,UAAU,GAAGC,wBAAI;;;;;;;;;;;;;CAAvB;eAee,CAACD,UAAD,EAAaE,aAAb,EAAyBC,gBAAzB,C",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nimport userSchema from './user';\nimport messageSchema from './message';\n\nconst linkSchema = gql`\n\n  scalar Date\n  \n  type Query {\n    _: Boolean\n  }\n  type Mutation {\n    _: Boolean\n  }\n  type Subscription {\n    _: Boolean\n  }\n`;\n\nexport default [linkSchema, userSchema, messageSchema];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556133402723
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _default = _apolloServerExpress.gql`\n  extend type Query {\n    users: [User!]\n    user(id: ID!): User\n    me: User\n  }\n\n  extend type Mutation {\n    signUp(\n      username: String!\n      email: String!\n      password: String!\n    ): Token!\n\n    signIn(login: String!, password: String!): Token!\n    deleteUser(id: ID!): Boolean!\n  }\n\n  type Token {\n    token: String!\n  }\n  \n  type User {\n    id: ID!\n    username: String!\n    email: String!\n    role: String\n    messages: [Message!]\n  }\n`;\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZ3FsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O2VBRWVBLHdCQUFJIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yY2hvd2RodXJ5L0Rlc2t0b3AvRGV2X1N0dWZmL3F1aXpub3cvc3JjL3NjaGVtYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGdxbGBcbiAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgIHVzZXJzOiBbVXNlciFdXG4gICAgdXNlcihpZDogSUQhKTogVXNlclxuICAgIG1lOiBVc2VyXG4gIH1cblxuICBleHRlbmQgdHlwZSBNdXRhdGlvbiB7XG4gICAgc2lnblVwKFxuICAgICAgdXNlcm5hbWU6IFN0cmluZyFcbiAgICAgIGVtYWlsOiBTdHJpbmchXG4gICAgICBwYXNzd29yZDogU3RyaW5nIVxuICAgICk6IFRva2VuIVxuXG4gICAgc2lnbkluKGxvZ2luOiBTdHJpbmchLCBwYXNzd29yZDogU3RyaW5nISk6IFRva2VuIVxuICAgIGRlbGV0ZVVzZXIoaWQ6IElEISk6IEJvb2xlYW4hXG4gIH1cblxuICB0eXBlIFRva2VuIHtcbiAgICB0b2tlbjogU3RyaW5nIVxuICB9XG4gIFxuICB0eXBlIFVzZXIge1xuICAgIGlkOiBJRCFcbiAgICB1c2VybmFtZTogU3RyaW5nIVxuICAgIGVtYWlsOiBTdHJpbmchXG4gICAgcm9sZTogU3RyaW5nXG4gICAgbWVzc2FnZXM6IFtNZXNzYWdlIV1cbiAgfVxuYDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;eAEeA,wBAAI",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nexport default gql`\n  extend type Query {\n    users: [User!]\n    user(id: ID!): User\n    me: User\n  }\n\n  extend type Mutation {\n    signUp(\n      username: String!\n      email: String!\n      password: String!\n    ): Token!\n\n    signIn(login: String!, password: String!): Token!\n    deleteUser(id: ID!): Boolean!\n  }\n\n  type Token {\n    token: String!\n  }\n  \n  type User {\n    id: ID!\n    username: String!\n    email: String!\n    role: String\n    messages: [Message!]\n  }\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1556120177388
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/message.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/message.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/message.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
        "sourceFileName": "message.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _default = _apolloServerExpress.gql`\n  extend type Query {\n    messages(cursor: String, limit: Int): MessageConnection!\n    message(id: ID!): Message!\n  }\n  extend type Mutation {\n    createMessage(text: String!): Message!\n    deleteMessage(id: ID!): Boolean!\n  }\n  type MessageConnection {\n    edges: [Message!]!\n    pageInfo: PageInfo!\n  }\n  type PageInfo {\n    hasNextPage: Boolean!\n    endCursor: Date!\n  }\n  type Message {\n    id: ID!\n    text: String!\n    createdAt: Date!\n    user: User!\n  }\n`;\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UuanMiXSwibmFtZXMiOlsiZ3FsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O2VBRWVBLHdCQUFJIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yY2hvd2RodXJ5L0Rlc2t0b3AvRGV2X1N0dWZmL3F1aXpub3cvc3JjL3NjaGVtYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGdxbGBcbiAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgIG1lc3NhZ2VzKGN1cnNvcjogU3RyaW5nLCBsaW1pdDogSW50KTogTWVzc2FnZUNvbm5lY3Rpb24hXG4gICAgbWVzc2FnZShpZDogSUQhKTogTWVzc2FnZSFcbiAgfVxuICBleHRlbmQgdHlwZSBNdXRhdGlvbiB7XG4gICAgY3JlYXRlTWVzc2FnZSh0ZXh0OiBTdHJpbmchKTogTWVzc2FnZSFcbiAgICBkZWxldGVNZXNzYWdlKGlkOiBJRCEpOiBCb29sZWFuIVxuICB9XG4gIHR5cGUgTWVzc2FnZUNvbm5lY3Rpb24ge1xuICAgIGVkZ2VzOiBbTWVzc2FnZSFdIVxuICAgIHBhZ2VJbmZvOiBQYWdlSW5mbyFcbiAgfVxuICB0eXBlIFBhZ2VJbmZvIHtcbiAgICBoYXNOZXh0UGFnZTogQm9vbGVhbiFcbiAgICBlbmRDdXJzb3I6IERhdGUhXG4gIH1cbiAgdHlwZSBNZXNzYWdlIHtcbiAgICBpZDogSUQhXG4gICAgdGV4dDogU3RyaW5nIVxuICAgIGNyZWF0ZWRBdDogRGF0ZSFcbiAgICB1c2VyOiBVc2VyIVxuICB9XG5gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "message.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;eAEeA,wBAAI",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nexport default gql`\n  extend type Query {\n    messages(cursor: String, limit: Int): MessageConnection!\n    message(id: ID!): Message!\n  }\n  extend type Mutation {\n    createMessage(text: String!): Message!\n    deleteMessage(id: ID!): Boolean!\n  }\n  type MessageConnection {\n    edges: [Message!]!\n    pageInfo: PageInfo!\n  }\n  type PageInfo {\n    hasNextPage: Boolean!\n    endCursor: Date!\n  }\n  type Message {\n    id: ID!\n    text: String!\n    createdAt: Date!\n    user: User!\n  }\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1556141929500
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _graphqlIsoDate = require(\"graphql-iso-date\");\n\nvar _user = _interopRequireDefault(require(\"../resolvers/user\"));\n\nvar _message = _interopRequireDefault(require(\"../resolvers/message\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst customScalarResolver = {\n  Date: _graphqlIsoDate.GraphQLDateTime\n};\nvar _default = [customScalarResolver, _user.default, _message.default];\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImN1c3RvbVNjYWxhclJlc29sdmVyIiwiRGF0ZSIsIkdyYXBoUUxEYXRlVGltZSIsInVzZXJSZXNvbHZlcnMiLCJtZXNzYWdlUmVzb2x2ZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxvQkFBb0IsR0FBRztBQUN6QkMsRUFBQUEsSUFBSSxFQUFFQztBQURtQixDQUE3QjtlQUllLENBQ1hGLG9CQURXLEVBRVhHLGFBRlcsRUFHWEMsZ0JBSFcsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmNob3dkaHVyeS9EZXNrdG9wL0Rldl9TdHVmZi9xdWl6bm93L3NyYy9yZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMRGF0ZVRpbWUgfSBmcm9tICdncmFwaHFsLWlzby1kYXRlJ1xuXG5pbXBvcnQgdXNlclJlc29sdmVycyBmcm9tICcuLi9yZXNvbHZlcnMvdXNlcic7XG5pbXBvcnQgbWVzc2FnZVJlc29sdmVycyBmcm9tICcuLi9yZXNvbHZlcnMvbWVzc2FnZSc7XG5cbmNvbnN0IGN1c3RvbVNjYWxhclJlc29sdmVyID0ge1xuICAgIERhdGU6IEdyYXBoUUxEYXRlVGltZSxcbn1cblxuZXhwb3J0IGRlZmF1bHQgW1xuICAgIGN1c3RvbVNjYWxhclJlc29sdmVyLFxuICAgIHVzZXJSZXNvbHZlcnMsIFxuICAgIG1lc3NhZ2VSZXNvbHZlcnMsXG5dOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "customScalarResolver",
        "Date",
        "GraphQLDateTime",
        "userResolvers",
        "messageResolvers"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;;;AAEA,MAAMA,oBAAoB,GAAG;AACzBC,EAAAA,IAAI,EAAEC;AADmB,CAA7B;eAIe,CACXF,oBADW,EAEXG,aAFW,EAGXC,gBAHW,C",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
      "sourcesContent": [
        "import { GraphQLDateTime } from 'graphql-iso-date'\n\nimport userResolvers from '../resolvers/user';\nimport messageResolvers from '../resolvers/message';\n\nconst customScalarResolver = {\n    Date: GraphQLDateTime,\n}\n\nexport default [\n    customScalarResolver,\n    userResolvers, \n    messageResolvers,\n];"
      ]
    },
    "sourceType": "script",
    "mtime": 1556133543660
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _authorization = require(\"./authorization\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst createToken = async (user, secret, expiresIn) => {\n  const {\n    id,\n    email,\n    username,\n    role\n  } = user;\n  return await _jsonwebtoken.default.sign({\n    id,\n    email,\n    username,\n    role\n  }, secret, {\n    expiresIn\n  });\n};\n\nvar _default = {\n  Query: {\n    users: async (parent, args, {\n      models\n    }) => {\n      return await models.User.findAll();\n    },\n    user: async (parent, {\n      id\n    }, {\n      models\n    }) => {\n      return await models.User.findByPk(id);\n    },\n    me: async (parent, args, {\n      models,\n      me\n    }) => {\n      if (!me) {\n        return null;\n      }\n\n      return await models.User.findByPk(me.id);\n    }\n  },\n  Mutation: {\n    signUp: async (parent, {\n      username,\n      email,\n      password\n    }, {\n      models,\n      secret\n    }) => {\n      const user = await models.User.create({\n        username,\n        email,\n        password\n      });\n      return {\n        token: createToken(user, secret, '120m')\n      };\n    },\n    signIn: async (parent, {\n      login,\n      password\n    }, {\n      models,\n      secret\n    }) => {\n      const user = await models.User.findByLogin(login);\n\n      if (!user) {\n        throw new _apolloServer.UserInputError('No user found with this login credentials.');\n      }\n\n      const isValid = await user.validatePassword(password);\n\n      if (!isValid) {\n        throw new _apolloServer.AuthenticationError('Invalid password.');\n      }\n\n      return {\n        token: createToken(user, secret, '120m')\n      };\n    },\n    deleteUser: (0, _graphqlResolvers.combineResolvers)(_authorization.isAdmin, async (parent, {\n      id\n    }, {\n      models\n    }) => {\n      return await models.User.destroy({\n        where: {\n          id\n        }\n      });\n    })\n  },\n  User: {\n    messages: async (user, args, {\n      models\n    }) => {\n      return await models.Message.findAll({\n        where: {\n          userId: user.id\n        }\n      });\n    }\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiY3JlYXRlVG9rZW4iLCJ1c2VyIiwic2VjcmV0IiwiZXhwaXJlc0luIiwiaWQiLCJlbWFpbCIsInVzZXJuYW1lIiwicm9sZSIsImp3dCIsInNpZ24iLCJRdWVyeSIsInVzZXJzIiwicGFyZW50IiwiYXJncyIsIm1vZGVscyIsIlVzZXIiLCJmaW5kQWxsIiwiZmluZEJ5UGsiLCJtZSIsIk11dGF0aW9uIiwic2lnblVwIiwicGFzc3dvcmQiLCJjcmVhdGUiLCJ0b2tlbiIsInNpZ25JbiIsImxvZ2luIiwiZmluZEJ5TG9naW4iLCJVc2VySW5wdXRFcnJvciIsImlzVmFsaWQiLCJ2YWxpZGF0ZVBhc3N3b3JkIiwiQXV0aGVudGljYXRpb25FcnJvciIsImRlbGV0ZVVzZXIiLCJpc0FkbWluIiwiZGVzdHJveSIsIndoZXJlIiwibWVzc2FnZXMiLCJNZXNzYWdlIiwidXNlcklkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7QUFFQSxNQUFNQSxXQUFXLEdBQUcsT0FBT0MsSUFBUCxFQUFhQyxNQUFiLEVBQXFCQyxTQUFyQixLQUFtQztBQUNyRCxRQUFNO0FBQUVDLElBQUFBLEVBQUY7QUFBTUMsSUFBQUEsS0FBTjtBQUFhQyxJQUFBQSxRQUFiO0FBQXVCQyxJQUFBQTtBQUF2QixNQUFnQ04sSUFBdEM7QUFDQSxTQUFPLE1BQU1PLHNCQUFJQyxJQUFKLENBQVM7QUFBRUwsSUFBQUEsRUFBRjtBQUFNQyxJQUFBQSxLQUFOO0FBQWFDLElBQUFBLFFBQWI7QUFBdUJDLElBQUFBO0FBQXZCLEdBQVQsRUFBd0NMLE1BQXhDLEVBQWdEO0FBQzNEQyxJQUFBQTtBQUQyRCxHQUFoRCxDQUFiO0FBR0QsQ0FMRDs7ZUFPZTtBQUNiTyxFQUFBQSxLQUFLLEVBQUU7QUFDTEMsSUFBQUEsS0FBSyxFQUFFLE9BQU9DLE1BQVAsRUFBZUMsSUFBZixFQUFxQjtBQUFFQyxNQUFBQTtBQUFGLEtBQXJCLEtBQW9DO0FB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QyxJQUFJLENBQUNHO0FBRFI7QUFEMkIsT0FBdkIsQ0FBYjtBQUtEO0FBUEc7QUFoRU8sQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmNob3dkaHVyeS9EZXNrdG9wL0Rldl9TdHVmZi9xdWl6bm93L3NyYy9yZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5pbXBvcnQgeyBjb21iaW5lUmVzb2x2ZXJzIH0gZnJvbSAnZ3JhcGhxbC1yZXNvbHZlcnMnO1xuaW1wb3J0IHsgQXV0aGVudGljYXRpb25FcnJvciwgVXNlcklucHV0RXJyb3IgfSBmcm9tICdhcG9sbG8tc2VydmVyJztcblxuaW1wb3J0IHsgaXNBZG1pbiB9IGZyb20gJy4vYXV0aG9yaXphdGlvbic7XG5cbmNvbnN0IGNyZWF0ZVRva2VuID0gYXN5bmMgKHVzZXIsIHNlY3JldCwgZXhwaXJlc0luKSA9PiB7XG4gIGNvbnN0IHsgaWQsIGVtYWlsLCB1c2VybmFtZSwgcm9sZSB9ID0gdXNlcjtcbiAgcmV0dXJuIGF3YWl0IGp3dC5zaWduKHsgaWQsIGVtYWlsLCB1c2VybmFtZSwgcm9sZSB9LCBzZWNyZXQsIHtcbiAgICBleHBpcmVzSW4sXG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBRdWVyeToge1xuICAgIHVzZXJzOiBhc3luYyAocGFyZW50LCBhcmdzLCB7IG1vZGVscyB9KSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgbW9kZWxzLlVzZXIuZmluZEFsbCgpO1xuICAgIH0sXG4gICAgdXNlcjogYXN5bmMgKHBhcmVudCwgeyBpZCB9LCB7IG1vZGVscyB9KSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgbW9kZWxzLlVzZXIuZmluZEJ5UGsoaWQpO1xuICAgIH0sXG4gICAgbWU6IGFzeW5jIChwYXJlbnQsIGFyZ3MsIHsgbW9kZWxzLCBtZSB9KSA9PiB7XG4gICAgICBpZiAoIW1lKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gYXdhaXQgbW9kZWxzLlVzZXIuZmluZEJ5UGsobWUuaWQpO1xuICAgIH0sXG4gIH0sXG5cbiAgTXV0YXRpb246IHtcbiAgICBzaWduVXA6IGFzeW5jIChcbiAgICAgIHBhcmVudCxcbiAgICAgIHsgdXNlcm5hbWUsIGVtYWlsLCBwYXNzd29yZCB9LFxuICAgICAgeyBtb2RlbHMsIHNlY3JldCB9LFxuICAgICkgPT4ge1xuICAgICAgY29uc3QgdXNlciA9IGF3YWl0IG1vZGVscy5Vc2VyLmNyZWF0ZSh7XG4gICAgICAgIHVzZXJuYW1lLFxuICAgICAgICBlbWFpbCxcbiAgICAgICAgcGFzc3dvcmQsXG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIHsgdG9rZW46IGNyZWF0ZVRva2VuKHVzZXIsIHNlY3JldCwgJzEyMG0nKSB9O1xuICAgIH0sXG5cbiAgICBzaWduSW46IGFzeW5jIChcbiAgICAgIHBhcmVudCxcbiAgICAgIHsgbG9naW4sIHBhc3N3b3JkIH0sXG4gICAgICB7IG1vZGVscywgc2VjcmV0IH0sXG4gICAgKSA9PiB7XG4gICAgICBjb25zdCB1c2VyID0gYXdhaXQgbW9kZWxzLlVzZXIuZmluZEJ5TG9naW4obG9naW4pO1xuXG4gICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFVzZXJJbnB1dEVycm9yKFxuICAgICAgICAgICdObyB1c2VyIGZvdW5kIHdpdGggdGhpcyBsb2dpbiBjcmVkZW50aWFscy4nLFxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBpc1ZhbGlkID0gYXdhaXQgdXNlci52YWxpZGF0ZVBhc3N3b3JkKHBhc3N3b3JkKTtcblxuICAgICAgaWYgKCFpc1ZhbGlkKSB7XG4gICAgICAgIHRocm93IG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKCdJbnZhbGlkIHBhc3N3b3JkLicpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4geyB0b2tlbjogY3JlYXRlVG9rZW4odXNlciwgc2VjcmV0LCAnMTIwbScpIH07XG4gICAgfSxcblxuICAgIGRlbGV0ZVVzZXI6IGNvbWJpbmVSZXNvbHZlcnMoXG4gICAgICBpc0FkbWluLFxuICAgICAgYXN5bmMgKHBhcmVudCwgeyBpZCB9LCB7IG1vZGVscyB9KSA9PiB7XG4gICAgICAgIHJldHVybiBhd2FpdCBtb2RlbHMuVXNlci5kZXN0cm95KHtcbiAgICAgICAgICB3aGVyZTogeyBpZCB9LFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgKSxcbiAgfSxcblxuICBVc2VyOiB7XG4gICAgbWVzc2FnZXM6IGFzeW5jICh1c2VyLCBhcmdzLCB7IG1vZGVscyB9KSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgbW9kZWxzLk1lc3NhZ2UuZmluZEFsbCh7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgdXNlcklkOiB1c2VyLmlkLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfSxcbiAgfSxcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "createToken",
        "user",
        "secret",
        "expiresIn",
        "id",
        "email",
        "username",
        "role",
        "jwt",
        "sign",
        "Query",
        "users",
        "parent",
        "args",
        "models",
        "User",
        "findAll",
        "findByPk",
        "me",
        "Mutation",
        "signUp",
        "password",
        "create",
        "token",
        "signIn",
        "login",
        "findByLogin",
        "UserInputError",
        "isValid",
        "validatePassword",
        "AuthenticationError",
        "deleteUser",
        "isAdmin",
        "destroy",
        "where",
        "messages",
        "Message",
        "userId"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport { combineResolvers } from 'graphql-resolvers';\nimport { AuthenticationError, UserInputError } from 'apollo-server';\n\nimport { isAdmin } from './authorization';\n\nconst createToken = async (user, secret, expiresIn) => {\n  const { id, email, username, role } = user;\n  return await jwt.sign({ id, email, username, role }, secret, {\n    expiresIn,\n  });\n};\n\nexport default {\n  Query: {\n    users: async (parent, args, { models }) => {\n      return await models.User.findAll();\n    },\n    user: async (parent, { id }, { models }) => {\n      return await models.User.findByPk(id);\n    },\n    me: async (parent, args, { models, me }) => {\n      if (!me) {\n        return null;\n      }\n\n      return await models.User.findByPk(me.id);\n    },\n  },\n\n  Mutation: {\n    signUp: async (\n      parent,\n      { username, email, password },\n      { models, secret },\n    ) => {\n      const user = await models.User.create({\n        username,\n        email,\n        password,\n      });\n\n      return { token: createToken(user, secret, '120m') };\n    },\n\n    signIn: async (\n      parent,\n      { login, password },\n      { models, secret },\n    ) => {\n      const user = await models.User.findByLogin(login);\n\n      if (!user) {\n        throw new UserInputError(\n          'No user found with this login credentials.',\n        );\n      }\n\n      const isValid = await user.validatePassword(password);\n\n      if (!isValid) {\n        throw new AuthenticationError('Invalid password.');\n      }\n\n      return { token: createToken(user, secret, '120m') };\n    },\n\n    deleteUser: combineResolvers(\n      isAdmin,\n      async (parent, { id }, { models }) => {\n        return await models.User.destroy({\n          where: { id },\n        });\n      },\n    ),\n  },\n\n  User: {\n    messages: async (user, args, { models }) => {\n      return await models.Message.findAll({\n        where: {\n          userId: user.id,\n        },\n      });\n    },\n  },\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1556120177388
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/authorization.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/authorization.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/authorization.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/authorization.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
        "sourceFileName": "authorization.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMessageOwner = exports.isAdmin = exports.isAuthenticated = void 0;\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nconst isAuthenticated = (parent, args, {\n  me\n}) => me ? _graphqlResolvers.skip : new _apolloServer.ForbiddenError('Not Authenticated as user');\n\nexports.isAuthenticated = isAuthenticated;\nconst isAdmin = (0, _graphqlResolvers.combineResolvers)(isAuthenticated, (parent, args, {\n  me: {\n    role\n  }\n}) => role === 'ADMIN' ? _graphqlResolvers.skip : new _apolloServer.ForbiddenError('Not authorized as admin.'));\nexports.isAdmin = isAdmin;\n\nconst isMessageOwner = async (parent, {\n  id\n}, {\n  models,\n  me\n}) => {\n  const message = await models.Message.findByPk(id, {\n    raw: true\n  });\n\n  if (message.userId !== me.id) {\n    throw new _apolloServer.ForbiddenError('Not authenticated as owner.');\n  }\n\n  return _graphqlResolvers.skip;\n};\n\nexports.isMessageOwner = isMessageOwner;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhvcml6YXRpb24uanMiXSwibmFtZXMiOlsiaXNBdXRoZW50aWNhdGVkIiwicGFyZW50IiwiYXJncyIsIm1lIiwic2tpcCIsIkZvcmJpZGRlbkVycm9yIiwiaXNBZG1pbiIsInJvbGUiLCJpc01lc3NhZ2VPd25lciIsImlkIiwibW9kZWxzIiwibWVzc2FnZSIsIk1lc3NhZ2UiLCJmaW5kQnlQayIsInJhdyIsInVzZXJJZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVPLE1BQU1BLGVBQWUsR0FBRyxDQUFDQyxNQUFELEVBQVNDLElBQVQsRUFBZTtBQUFFQyxFQUFBQTtBQUFGLENBQWYsS0FDM0JBLEVBQUUsR0FBR0Msc0JBQUgsR0FBVSxJQUFJQyw0QkFBSixDQUFtQiwyQkFBbkIsQ0FEVDs7O0FBR0EsTUFBTUMsT0FBTyxHQUFHLHdDQUNuQk4sZUFEbUIsRUFFbkIsQ0FBQ0MsTUFBRCxFQUFTQyxJQUFULEVBQWU7QUFBRUMsRUFBQUEsRUFBRSxFQUFFO0FBQUVJLElBQUFBO0FBQUY7QUFBTixDQUFmLEtBQ0lBLElBQUksS0FBSyxPQUFULEdBQ0VILHNCQURGLEdBRUUsSUFBSUMsNEJBQUosQ0FBbUIsMEJBQW5CLENBTGEsQ0FBaEI7OztBQVFBLE1BQU1HLGNBQWMsR0FBRyxPQUMxQlAsTUFEMEIsRUFFMUI7QUFBRVEsRUFBQUE7QUFBRixDQUYwQixFQUcxQjtBQUFFQyxFQUFBQSxNQUFGO0FBQVVQLEVBQUFBO0FBQVYsQ0FIMEIsS0FJekI7QUFDRCxRQUFNUSxPQUFPLEdBQUcsTUFBTUQsTUFBTSxDQUFDRSxPQUFQLENBQWVDLFFBQWYsQ0FBd0JKLEVBQXhCLEVBQTRCO0FBQUVLLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBQTVCLENBQXRCOztBQUVBLE1BQUdILE9BQU8sQ0FBQ0ksTUFBUixLQUFtQlosRUFBRSxDQUFDTSxFQUF6QixFQUE2QjtBQUN6QixVQUFNLElBQUlKLDRCQUFKLENBQW1CLDZCQUFuQixDQUFOO0FBQ0g7O0FBQ0QsU0FBT0Qsc0JBQVA7QUFDSCxDQVhNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yY2hvd2RodXJ5L0Rlc2t0b3AvRGV2X1N0dWZmL3F1aXpub3cvc3JjL3Jlc29sdmVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvcmJpZGRlbkVycm9yIH0gZnJvbSAnYXBvbGxvLXNlcnZlcic7XG5pbXBvcnQgeyBjb21iaW5lUmVzb2x2ZXJzLCBza2lwIH0gZnJvbSAnZ3JhcGhxbC1yZXNvbHZlcnMnXG5cbmV4cG9ydCBjb25zdCBpc0F1dGhlbnRpY2F0ZWQgPSAocGFyZW50LCBhcmdzLCB7IG1lIH0pID0+XG4gICAgbWUgPyBza2lwIDogbmV3IEZvcmJpZGRlbkVycm9yKCdOb3QgQXV0aGVudGljYXRlZCBhcyB1c2VyJylcblxuZXhwb3J0IGNvbnN0IGlzQWRtaW4gPSBjb21iaW5lUmVzb2x2ZXJzKFxuICAgIGlzQXV0aGVudGljYXRlZCxcbiAgICAocGFyZW50LCBhcmdzLCB7IG1lOiB7IHJvbGUgfSB9KSA9PlxuICAgICAgICByb2xlID09PSAnQURNSU4nXG4gICAgICAgID8gc2tpcFxuICAgICAgICA6IG5ldyBGb3JiaWRkZW5FcnJvcignTm90IGF1dGhvcml6ZWQgYXMgYWRtaW4uJyksXG4pO1xuXG5leHBvcnQgY29uc3QgaXNNZXNzYWdlT3duZXIgPSBhc3luYyhcbiAgICBwYXJlbnQsXG4gICAgeyBpZCB9LFxuICAgIHsgbW9kZWxzLCBtZSB9LFxuKSA9PiB7XG4gICAgY29uc3QgbWVzc2FnZSA9IGF3YWl0IG1vZGVscy5NZXNzYWdlLmZpbmRCeVBrKGlkLCB7IHJhdzogdHJ1ZSB9KTtcblxuICAgIGlmKG1lc3NhZ2UudXNlcklkICE9PSBtZS5pZCkge1xuICAgICAgICB0aHJvdyBuZXcgRm9yYmlkZGVuRXJyb3IoJ05vdCBhdXRoZW50aWNhdGVkIGFzIG93bmVyLicpO1xuICAgIH1cbiAgICByZXR1cm4gc2tpcDtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "authorization.js"
      ],
      "names": [
        "isAuthenticated",
        "parent",
        "args",
        "me",
        "skip",
        "ForbiddenError",
        "isAdmin",
        "role",
        "isMessageOwner",
        "id",
        "models",
        "message",
        "Message",
        "findByPk",
        "raw",
        "userId"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEO,MAAMA,eAAe,GAAG,CAACC,MAAD,EAASC,IAAT,EAAe;AAAEC,EAAAA;AAAF,CAAf,KAC3BA,EAAE,GAAGC,sBAAH,GAAU,IAAIC,4BAAJ,CAAmB,2BAAnB,CADT;;;AAGA,MAAMC,OAAO,GAAG,wCACnBN,eADmB,EAEnB,CAACC,MAAD,EAASC,IAAT,EAAe;AAAEC,EAAAA,EAAE,EAAE;AAAEI,IAAAA;AAAF;AAAN,CAAf,KACIA,IAAI,KAAK,OAAT,GACEH,sBADF,GAEE,IAAIC,4BAAJ,CAAmB,0BAAnB,CALa,CAAhB;;;AAQA,MAAMG,cAAc,GAAG,OAC1BP,MAD0B,EAE1B;AAAEQ,EAAAA;AAAF,CAF0B,EAG1B;AAAEC,EAAAA,MAAF;AAAUP,EAAAA;AAAV,CAH0B,KAIzB;AACD,QAAMQ,OAAO,GAAG,MAAMD,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBJ,EAAxB,EAA4B;AAAEK,IAAAA,GAAG,EAAE;AAAP,GAA5B,CAAtB;;AAEA,MAAGH,OAAO,CAACI,MAAR,KAAmBZ,EAAE,CAACM,EAAzB,EAA6B;AACzB,UAAM,IAAIJ,4BAAJ,CAAmB,6BAAnB,CAAN;AACH;;AACD,SAAOD,sBAAP;AACH,CAXM",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
      "sourcesContent": [
        "import { ForbiddenError } from 'apollo-server';\nimport { combineResolvers, skip } from 'graphql-resolvers'\n\nexport const isAuthenticated = (parent, args, { me }) =>\n    me ? skip : new ForbiddenError('Not Authenticated as user')\n\nexport const isAdmin = combineResolvers(\n    isAuthenticated,\n    (parent, args, { me: { role } }) =>\n        role === 'ADMIN'\n        ? skip\n        : new ForbiddenError('Not authorized as admin.'),\n);\n\nexport const isMessageOwner = async(\n    parent,\n    { id },\n    { models, me },\n) => {\n    const message = await models.Message.findByPk(id, { raw: true });\n\n    if(message.userId !== me.id) {\n        throw new ForbiddenError('Not authenticated as owner.');\n    }\n    return skip;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1556126871558
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/message.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/message.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/message.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers/message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
        "sourceFileName": "message.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nvar _authorization = require(\"./authorization\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst toCursorHash = string => Buffer.from(string, 'base64').toString('ascii');\n\nvar _default = {\n  Query: {\n    messages: async (parent, {\n      cursor,\n      limit = 100\n    }, {\n      models\n    }) => {\n      const cursorOptions = cursor ? {\n        where: {\n          createdAt: {\n            [_sequelize.default.Op.lt]: fromCursorHash(cursor)\n          }\n        }\n      } : {};\n      const messages = await models.Message.findAll({\n        order: [['createdAt', 'DESC']],\n        limit: limit + 1,\n        ...cursorOptions\n      });\n      const hasNextPage = messages.length > limit;\n      const edges = hasNextPage ? messages.slice(0, -1) : messages;\n      return {\n        edges,\n        pageInfo: {\n          hasNextPage,\n          endCursor: toCursorHash(edges[edges.length - 1].createdAt.toString())\n        }\n      };\n    },\n    message: async (parent, {\n      id\n    }, {\n      models\n    }) => {\n      return await models.Message.findById(id);\n    }\n  },\n  Mutation: {\n    createMessage: (0, _graphqlResolvers.combineResolvers)(_authorization.isAuthenticated, async (parent, {\n      text\n    }, {\n      models,\n      me\n    }) => {\n      return await models.Message.create({\n        text,\n        userId: me.id\n      });\n    }),\n    deleteMessage: (0, _graphqlResolvers.combineResolvers)(_authorization.isAuthenticated, _authorization.isMessageOwner, async (parent, {\n      id\n    }, {\n      models\n    }) => {\n      return await models.Message.destroy({\n        where: {\n          id\n        }\n      });\n    })\n  },\n  Message: {\n    user: async (message, args, {\n      models\n    }) => {\n      return await models.User.findByPk(message.userId);\n    }\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UuanMiXSwibmFtZXMiOlsidG9DdXJzb3JIYXNoIiwic3RyaW5nIiwiQnVmZmVyIiwiZnJvbSIsInRvU3RyaW5nIiwiUXVlcnkiLCJtZXNzYWdlcyIsInBhcmVudCIsImN1cnNvciIsImxpbWl0IiwibW9kZWxzIiwiY3Vyc29yT3B0aW9ucyIsIndoZXJlIiwiY3JlYXRlZEF0IiwiU2VxdWVsaXplIiwiT3AiLCJsdCIsImZyb21DdXJzb3JIYXNoIiwiTWVzc2FnZSIsImZpbmRBbGwiLCJvcmRlciIsImhhc05leHRQYWdlIiwibGVuZ3RoIiwiZWRnZXMiLCJzbGljZSIsInBhZ2VJbmZvIiwiZW5kQ3Vyc29yIiwibWVzc2FnZSIsImlkIiwiZmluZEJ5SWQiLCJNdXRhdGlvbiIsImNyZWF0ZU1lc3NhZ2UiLCJpc0F1dGhlbnRpY2F0ZWQiLCJ0ZXh0IiwibWUiLCJjcmVhdGUiLCJ1c2VySWQiLCJkZWxldGVNZXNzYWdlIiwiaXNNZXNzYWdlT3duZXIiLCJkZXN0cm95IiwidXNlciIsImFyZ3MiLCJVc2VyIiwiZmluZEJ5UGsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7OztBQUVBLE1BQU1BLFlBQVksR0FBR0MsTUFBTSxJQUN6QkMsTUFBTSxDQUFDQyxJQUFQLENBQVlGLE1BQVosRUFBb0IsUUFBcEIsRUFBOEJHLFFBQTlCLENBQXVDLE9BQXZDLENBREY7O2VBR2U7QUFDYkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xDLElBQUFBLFFBQVEsRUFBRSxPQUFPQyxNQUFQLEVBQWU7QUFDdkJDLE1BQUFBLE1BRHVCO0FBRXZCQyxNQUFBQSxLQUFLLEdBQUc7QUFGZSxLQUFmLEVBR1A7QUFDREMsTUFBQUE7QUFEQyxLQUhPLEtBS0o7QUFDSixZQUFNQyxhQUFhLEdBQUdILE1BQU0sR0FDMUI7QUFDQUksUUFBQUEsS0FBSyxFQUFFO0FBQ0xDLFVBQUFBLFNBQVMsRUFBRTtBQUNULGFBQUNDLG1CQUFVQyxFQUFWLENBQWFDLEVBQWQsR0FBbUJDLGNBQWMsQ0FBQ1QsTUFBRDtBQUR4QjtBQUROO0FBRFAsT0FEMEIsR0FRMUIsRUFSRjtBQVVBLFlBQU1GLFFBQVEsR0FBRyxNQUFNSSxNQUFNLENBQUNRLE9BQVAsQ0FBZUMsT0FBZixDQUF1QjtBQUM1Q0MsUUFBQUEsS0FBSyxFQUFFLENBQUMsQ0FBQyxXQUFELEVBQWMsTUFBZCxDQUFELENBRHFDO0FBRTVDWCxRQUFBQSxLQUFLLEVBQUVBLEtBQUssR0FBRyxDQUY2QjtBQUc1QyxXQUFHRTtBQUh5QyxPQUF2QixDQUF2QjtBQU1BLFlBQU1VLFdBQVcsR0FBR2YsUUFBUSxDQUFDZ0IsTUFBVCxHQUFrQmIsS0FBdEM7QUFDQSxZQUFNYyxLQUFLLEdBQUdGLFdBQVcsR0FBR2YsUUFBUSxDQUFDa0IsS0FBVCxDQUFlLENBQWYsRUFBa0IsQ0FBQyxDQUFuQixDQUFILEdBQTJCbEIsUUFBcEQ7QUFFQSxhQUFPO0FBQ0xpQixRQUFBQSxLQURLO0FBRUxFLFFBQUFBLFFBQVEsRUFBRTtBQUNSSixVQUFBQSxXQURRO0FBRVJLLFVBQUFBLFNBQVMsRUFBRTFCLFlBQVksQ0FDckJ1QixLQUFLLENBQUNBLEtBQUssQ0FBQ0QsTUFBTixHQUFjLENBQWYsQ0FBTCxDQUF1QlQsU0FBdkIsQ0FBaUNULFFBQWpDLEVBRHFCO0FBRmY7QUFGTCxPQUFQO0FBU0QsS0FuQ0k7QUFvQ0x1QixJQUFBQSxPQUFPLEVBQUUsT0FBT3BCLE1BQVAsRUFBZTtBQUN0QnFCLE1BQUFBO0FBRHNCLEtBQWYsRUFFTjtBQUNEbEIsTUFBQUE7QUFEQyxLQUZNLEtBSUg7QUFDSixhQUFPLE1BQU1BLE1BQU0sQ0FBQ1EsT0FBUCxDQUFlVyxRQUFmLENBQXdCRCxFQUF4QixDQUFiO0FBQ0Q7QUExQ0ksR0FETTtBQThDYkUsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLGFBQWEsRUFBRSx3Q0FDYkMsOEJBRGEsRUFFYixPQUFPekIsTUFBUCxFQUFlO0FBQUUwQixNQUFBQTtBQUFGLEtBQWYsRUFBeUI7QUFBRXZCLE1BQUFBLE1BQUY7QUFBVXdCLE1BQUFBO0FBQVYsS0FBekIsS0FBNEM7QUFDMUMsYUFBTyxNQUFNeEIsTUFBTSxDQUFDUSxPQUFQLENBQWVpQixNQUFmLENBQXNCO0FBQ2pDRixRQUFBQSxJQURpQztBQUVqQ0csUUFBQUEsTUFBTSxFQUFFRixFQUFFLENBQUNOO0FBRnNCLE9BQXRCLENBQWI7QUFJRCxLQVBZLENBRFA7QUFXUlMsSUFBQUEsYUFBYSxFQUFFLHdDQUNiTCw4QkFEYSxFQUViTSw2QkFGYSxFQUdiLE9BQU8vQixNQUFQLEVBQWU7QUFBRXFCLE1BQUFBO0FBQUYsS0FBZixFQUF1QjtBQUFFbEIsTUFBQUE7QUFBRixLQUF2QixLQUFzQztBQUNwQyxhQUFPLE1BQU1BLE1BQU0sQ0FBQ1EsT0FBUCxDQUFlcUIsT0FBZixDQUF1QjtBQUFFM0IsUUFBQUEsS0FBSyxFQUFFO0FBQUVnQixVQUFBQTtBQUFGO0FBQVQsT0FBdkIsQ0FBYjtBQUNELEtBTFk7QUFYUCxHQTlDRztBQWtFYlYsRUFBQUEsT0FBTyxFQUFFO0FBQ1BzQixJQUFBQSxJQUFJLEVBQUUsT0FBT2IsT0FBUCxFQUFnQmMsSUFBaEIsRUFBc0I7QUFBRS9CLE1BQUFBO0FBQUYsS0FBdEIsS0FBcUM7QUFDekMsYUFBTyxNQUFNQSxNQUFNLENBQUNnQyxJQUFQLENBQVlDLFFBQVosQ0FBcUJoQixPQUFPLENBQUNTLE1BQTdCLENBQWI7QUFDRDtBQUhNO0FBbEVJLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JjaG93ZGh1cnkvRGVza3RvcC9EZXZfU3R1ZmYvcXVpem5vdy9zcmMvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuaW1wb3J0IHsgY29tYmluZVJlc29sdmVycyB9IGZyb20gJ2dyYXBocWwtcmVzb2x2ZXJzJztcblxuaW1wb3J0IHsgaXNBdXRoZW50aWNhdGVkLCBpc01lc3NhZ2VPd25lciB9IGZyb20gJy4vYXV0aG9yaXphdGlvbic7XG5cbmNvbnN0IHRvQ3Vyc29ySGFzaCA9IHN0cmluZyA9PlxuICBCdWZmZXIuZnJvbShzdHJpbmcsICdiYXNlNjQnKS50b1N0cmluZygnYXNjaWknKTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBRdWVyeToge1xuICAgIG1lc3NhZ2VzOiBhc3luYyAocGFyZW50LCB7XG4gICAgICBjdXJzb3IsXG4gICAgICBsaW1pdCA9IDEwMFxuICAgIH0sIHtcbiAgICAgIG1vZGVsc1xuICAgIH0pID0+IHtcbiAgICAgIGNvbnN0IGN1cnNvck9wdGlvbnMgPSBjdXJzb3JcbiAgICAgID8ge1xuICAgICAgICB3aGVyZToge1xuICAgICAgICAgIGNyZWF0ZWRBdDoge1xuICAgICAgICAgICAgW1NlcXVlbGl6ZS5PcC5sdF06IGZyb21DdXJzb3JIYXNoKGN1cnNvciksXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH1cbiAgICAgIDoge307XG4gICAgICBcbiAgICAgIGNvbnN0IG1lc3NhZ2VzID0gYXdhaXQgbW9kZWxzLk1lc3NhZ2UuZmluZEFsbCh7XG4gICAgICAgIG9yZGVyOiBbWydjcmVhdGVkQXQnLCAnREVTQyddXSxcbiAgICAgICAgbGltaXQ6IGxpbWl0ICsgMSxcbiAgICAgICAgLi4uY3Vyc29yT3B0aW9ucyxcbiAgICAgIH0pO1xuXG4gICAgICBjb25zdCBoYXNOZXh0UGFnZSA9IG1lc3NhZ2VzLmxlbmd0aCA+IGxpbWl0O1xuICAgICAgY29uc3QgZWRnZXMgPSBoYXNOZXh0UGFnZSA/IG1lc3NhZ2VzLnNsaWNlKDAsIC0xKSA6IG1lc3NhZ2VzO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBlZGdlcyxcbiAgICAgICAgcGFnZUluZm86IHtcbiAgICAgICAgICBoYXNOZXh0UGFnZSxcbiAgICAgICAgICBlbmRDdXJzb3I6IHRvQ3Vyc29ySGFzaChcbiAgICAgICAgICAgIGVkZ2VzW2VkZ2VzLmxlbmd0aCAtMV0uY3JlYXRlZEF0LnRvU3RyaW5nKCksXG4gICAgICAgICAgKSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSxcbiAgICBtZXNzYWdlOiBhc3luYyAocGFyZW50LCB7XG4gICAgICBpZFxuICAgIH0sIHtcbiAgICAgIG1vZGVsc1xuICAgIH0pID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCBtb2RlbHMuTWVzc2FnZS5maW5kQnlJZChpZCk7XG4gICAgfSxcbiAgfSxcblxuICBNdXRhdGlvbjoge1xuICAgIGNyZWF0ZU1lc3NhZ2U6IGNvbWJpbmVSZXNvbHZlcnMoXG4gICAgICBpc0F1dGhlbnRpY2F0ZWQsXG4gICAgICBhc3luYyAocGFyZW50LCB7IHRleHQgfSwgeyBtb2RlbHMsIG1lIH0pID0+IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IG1vZGVscy5NZXNzYWdlLmNyZWF0ZSh7XG4gICAgICAgICAgdGV4dCxcbiAgICAgICAgICB1c2VySWQ6IG1lLmlkLFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgKSxcblxuICAgIGRlbGV0ZU1lc3NhZ2U6IGNvbWJpbmVSZXNvbHZlcnMoXG4gICAgICBpc0F1dGhlbnRpY2F0ZWQsXG4gICAgICBpc01lc3NhZ2VPd25lcixcbiAgICAgIGFzeW5jIChwYXJlbnQsIHsgaWQgfSwgeyBtb2RlbHMgfSkgPT4ge1xuICAgICAgICByZXR1cm4gYXdhaXQgbW9kZWxzLk1lc3NhZ2UuZGVzdHJveSh7IHdoZXJlOiB7IGlkIH0gfSk7XG4gICAgICB9LFxuICAgICksXG4gIH0sXG5cbiAgTWVzc2FnZToge1xuICAgIHVzZXI6IGFzeW5jIChtZXNzYWdlLCBhcmdzLCB7IG1vZGVscyB9KSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgbW9kZWxzLlVzZXIuZmluZEJ5UGsobWVzc2FnZS51c2VySWQpO1xuICAgIH0sXG4gIH0sXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "message.js"
      ],
      "names": [
        "toCursorHash",
        "string",
        "Buffer",
        "from",
        "toString",
        "Query",
        "messages",
        "parent",
        "cursor",
        "limit",
        "models",
        "cursorOptions",
        "where",
        "createdAt",
        "Sequelize",
        "Op",
        "lt",
        "fromCursorHash",
        "Message",
        "findAll",
        "order",
        "hasNextPage",
        "length",
        "edges",
        "slice",
        "pageInfo",
        "endCursor",
        "message",
        "id",
        "findById",
        "Mutation",
        "createMessage",
        "isAuthenticated",
        "text",
        "me",
        "create",
        "userId",
        "deleteMessage",
        "isMessageOwner",
        "destroy",
        "user",
        "args",
        "User",
        "findByPk"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;;;AAEA,MAAMA,YAAY,GAAGC,MAAM,IACzBC,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoB,QAApB,EAA8BG,QAA9B,CAAuC,OAAvC,CADF;;eAGe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AACvBC,MAAAA,MADuB;AAEvBC,MAAAA,KAAK,GAAG;AAFe,KAAf,EAGP;AACDC,MAAAA;AADC,KAHO,KAKJ;AACJ,YAAMC,aAAa,GAAGH,MAAM,GAC1B;AACAI,QAAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE;AACT,aAACC,mBAAUC,EAAV,CAAaC,EAAd,GAAmBC,cAAc,CAACT,MAAD;AADxB;AADN;AADP,OAD0B,GAQ1B,EARF;AAUA,YAAMF,QAAQ,GAAG,MAAMI,MAAM,CAACQ,OAAP,CAAeC,OAAf,CAAuB;AAC5CC,QAAAA,KAAK,EAAE,CAAC,CAAC,WAAD,EAAc,MAAd,CAAD,CADqC;AAE5CX,QAAAA,KAAK,EAAEA,KAAK,GAAG,CAF6B;AAG5C,WAAGE;AAHyC,OAAvB,CAAvB;AAMA,YAAMU,WAAW,GAAGf,QAAQ,CAACgB,MAAT,GAAkBb,KAAtC;AACA,YAAMc,KAAK,GAAGF,WAAW,GAAGf,QAAQ,CAACkB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAH,GAA2BlB,QAApD;AAEA,aAAO;AACLiB,QAAAA,KADK;AAELE,QAAAA,QAAQ,EAAE;AACRJ,UAAAA,WADQ;AAERK,UAAAA,SAAS,EAAE1B,YAAY,CACrBuB,KAAK,CAACA,KAAK,CAACD,MAAN,GAAc,CAAf,CAAL,CAAuBT,SAAvB,CAAiCT,QAAjC,EADqB;AAFf;AAFL,OAAP;AASD,KAnCI;AAoCLuB,IAAAA,OAAO,EAAE,OAAOpB,MAAP,EAAe;AACtBqB,MAAAA;AADsB,KAAf,EAEN;AACDlB,MAAAA;AADC,KAFM,KAIH;AACJ,aAAO,MAAMA,MAAM,CAACQ,OAAP,CAAeW,QAAf,CAAwBD,EAAxB,CAAb;AACD;AA1CI,GADM;AA8CbE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,wCACbC,8BADa,EAEb,OAAOzB,MAAP,EAAe;AAAE0B,MAAAA;AAAF,KAAf,EAAyB;AAAEvB,MAAAA,MAAF;AAAUwB,MAAAA;AAAV,KAAzB,KAA4C;AAC1C,aAAO,MAAMxB,MAAM,CAACQ,OAAP,CAAeiB,MAAf,CAAsB;AACjCF,QAAAA,IADiC;AAEjCG,QAAAA,MAAM,EAAEF,EAAE,CAACN;AAFsB,OAAtB,CAAb;AAID,KAPY,CADP;AAWRS,IAAAA,aAAa,EAAE,wCACbL,8BADa,EAEbM,6BAFa,EAGb,OAAO/B,MAAP,EAAe;AAAEqB,MAAAA;AAAF,KAAf,EAAuB;AAAElB,MAAAA;AAAF,KAAvB,KAAsC;AACpC,aAAO,MAAMA,MAAM,CAACQ,OAAP,CAAeqB,OAAf,CAAuB;AAAE3B,QAAAA,KAAK,EAAE;AAAEgB,UAAAA;AAAF;AAAT,OAAvB,CAAb;AACD,KALY;AAXP,GA9CG;AAkEbV,EAAAA,OAAO,EAAE;AACPsB,IAAAA,IAAI,EAAE,OAAOb,OAAP,EAAgBc,IAAhB,EAAsB;AAAE/B,MAAAA;AAAF,KAAtB,KAAqC;AACzC,aAAO,MAAMA,MAAM,CAACgC,IAAP,CAAYC,QAAZ,CAAqBhB,OAAO,CAACS,MAA7B,CAAb;AACD;AAHM;AAlEI,C",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/resolvers",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\nimport { combineResolvers } from 'graphql-resolvers';\n\nimport { isAuthenticated, isMessageOwner } from './authorization';\n\nconst toCursorHash = string =>\n  Buffer.from(string, 'base64').toString('ascii');\n\nexport default {\n  Query: {\n    messages: async (parent, {\n      cursor,\n      limit = 100\n    }, {\n      models\n    }) => {\n      const cursorOptions = cursor\n      ? {\n        where: {\n          createdAt: {\n            [Sequelize.Op.lt]: fromCursorHash(cursor),\n          },\n        },\n      }\n      : {};\n      \n      const messages = await models.Message.findAll({\n        order: [['createdAt', 'DESC']],\n        limit: limit + 1,\n        ...cursorOptions,\n      });\n\n      const hasNextPage = messages.length > limit;\n      const edges = hasNextPage ? messages.slice(0, -1) : messages;\n\n      return {\n        edges,\n        pageInfo: {\n          hasNextPage,\n          endCursor: toCursorHash(\n            edges[edges.length -1].createdAt.toString(),\n          ),\n        },\n      };\n    },\n    message: async (parent, {\n      id\n    }, {\n      models\n    }) => {\n      return await models.Message.findById(id);\n    },\n  },\n\n  Mutation: {\n    createMessage: combineResolvers(\n      isAuthenticated,\n      async (parent, { text }, { models, me }) => {\n        return await models.Message.create({\n          text,\n          userId: me.id,\n        });\n      },\n    ),\n\n    deleteMessage: combineResolvers(\n      isAuthenticated,\n      isMessageOwner,\n      async (parent, { id }, { models }) => {\n        return await models.Message.destroy({ where: { id } });\n      },\n    ),\n  },\n\n  Message: {\n    user: async (message, args, { models }) => {\n      return await models.User.findByPk(message.userId);\n    },\n  },\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1556143950141
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.sequelize = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet sequelize;\nexports.sequelize = sequelize;\n\nif (process.env.DATABASE_URL) {\n  exports.sequelize = sequelize = new Sequielize(process.env.DATABASE_URL, {\n    dialect: 'postgres'\n  });\n} else {\n  exports.sequelize = sequelize = new _sequelize.default(process.env.DATABASE, process.env.DATABASE_USER, process.env.DATABASE_PASSWORD, {\n    dialect: 'postgres'\n  });\n}\n\nconst models = {\n  User: sequelize.import('./user'),\n  Message: sequelize.import('./message')\n};\nObject.keys(models).forEach(key => {\n  if ('associate' in models[key]) {\n    models[key].associate(models);\n  }\n});\nvar _default = models;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJTZXF1aWVsaXplIiwiZGlhbGVjdCIsIlNlcXVlbGl6ZSIsIkRBVEFCQVNFIiwiREFUQUJBU0VfVVNFUiIsIkRBVEFCQVNFX1BBU1NXT1JEIiwibW9kZWxzIiwiVXNlciIsImltcG9ydCIsIk1lc3NhZ2UiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImFzc29jaWF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsSUFBSUEsU0FBSjs7O0FBQ0EsSUFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFlBQWhCLEVBQThCO0FBQzVCLHNCQUFBSCxTQUFTLEdBQUcsSUFBSUksVUFBSixDQUFlSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsWUFBM0IsRUFBeUM7QUFDbkRFLElBQUFBLE9BQU8sRUFBRTtBQUQwQyxHQUF6QyxDQUFaO0FBR0QsQ0FKRCxNQUlPO0FBQ0wsc0JBQUFMLFNBQVMsR0FBRyxJQUFJTSxrQkFBSixDQUNWTCxPQUFPLENBQUNDLEdBQVIsQ0FBWUssUUFERixFQUVWTixPQUFPLENBQUNDLEdBQVIsQ0FBWU0sYUFGRixFQUdWUCxPQUFPLENBQUNDLEdBQVIsQ0FBWU8saUJBSEYsRUFJVjtBQUNFSixJQUFBQSxPQUFPLEVBQUU7QUFEWCxHQUpVLENBQVo7QUFRRDs7QUFFRCxNQUFNSyxNQUFNLEdBQUc7QUFDYkMsRUFBQUEsSUFBSSxFQUFFWCxTQUFTLENBQUNZLE1BQVYsQ0FBaUIsUUFBakIsQ0FETztBQUViQyxFQUFBQSxPQUFPLEVBQUViLFNBQVMsQ0FBQ1ksTUFBVixDQUFpQixXQUFqQjtBQUZJLENBQWY7QUFLQUUsTUFBTSxDQUFDQyxJQUFQLENBQVlMLE1BQVosRUFBb0JNLE9BQXBCLENBQTRCQyxHQUFHLElBQUk7QUFDakMsTUFBSSxlQUFlUCxNQUFNLENBQUNPLEdBQUQsQ0FBekIsRUFBZ0M7QUFDOUJQLElBQUFBLE1BQU0sQ0FBQ08sR0FBRCxDQUFOLENBQVlDLFNBQVosQ0FBc0JSLE1BQXRCO0FBQ0Q7QUFDRixDQUpEO2VBUWVBLE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL3JjaG93ZGh1cnkvRGVza3RvcC9EZXZfU3R1ZmYvcXVpem5vdy9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuXG5sZXQgc2VxdWVsaXplO1xuaWYgKHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCkge1xuICBzZXF1ZWxpemUgPSBuZXcgU2VxdWllbGl6ZShwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwsIHtcbiAgICBkaWFsZWN0OiAncG9zdGdyZXMnLFxuICB9KTtcbn0gZWxzZSB7XG4gIHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUoXG4gICAgcHJvY2Vzcy5lbnYuREFUQUJBU0UsXG4gICAgcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVNFUixcbiAgICBwcm9jZXNzLmVudi5EQVRBQkFTRV9QQVNTV09SRCxcbiAgICB7XG4gICAgICBkaWFsZWN0OiAncG9zdGdyZXMnLFxuICAgIH0sXG4gICk7XG59XG5cbmNvbnN0IG1vZGVscyA9IHtcbiAgVXNlcjogc2VxdWVsaXplLmltcG9ydCgnLi91c2VyJyksXG4gIE1lc3NhZ2U6IHNlcXVlbGl6ZS5pbXBvcnQoJy4vbWVzc2FnZScpLFxufTtcblxuT2JqZWN0LmtleXMobW9kZWxzKS5mb3JFYWNoKGtleSA9PiB7XG4gIGlmICgnYXNzb2NpYXRlJyBpbiBtb2RlbHNba2V5XSkge1xuICAgIG1vZGVsc1trZXldLmFzc29jaWF0ZShtb2RlbHMpO1xuICB9XG59KTtcblxuZXhwb3J0IHsgc2VxdWVsaXplIH07XG5cbmV4cG9ydCBkZWZhdWx0IG1vZGVsczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "sequelize",
        "process",
        "env",
        "DATABASE_URL",
        "Sequielize",
        "dialect",
        "Sequelize",
        "DATABASE",
        "DATABASE_USER",
        "DATABASE_PASSWORD",
        "models",
        "User",
        "import",
        "Message",
        "Object",
        "keys",
        "forEach",
        "key",
        "associate"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAIA,SAAJ;;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,YAAhB,EAA8B;AAC5B,sBAAAH,SAAS,GAAG,IAAII,UAAJ,CAAeH,OAAO,CAACC,GAAR,CAAYC,YAA3B,EAAyC;AACnDE,IAAAA,OAAO,EAAE;AAD0C,GAAzC,CAAZ;AAGD,CAJD,MAIO;AACL,sBAAAL,SAAS,GAAG,IAAIM,kBAAJ,CACVL,OAAO,CAACC,GAAR,CAAYK,QADF,EAEVN,OAAO,CAACC,GAAR,CAAYM,aAFF,EAGVP,OAAO,CAACC,GAAR,CAAYO,iBAHF,EAIV;AACEJ,IAAAA,OAAO,EAAE;AADX,GAJU,CAAZ;AAQD;;AAED,MAAMK,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAEX,SAAS,CAACY,MAAV,CAAiB,QAAjB,CADO;AAEbC,EAAAA,OAAO,EAAEb,SAAS,CAACY,MAAV,CAAiB,WAAjB;AAFI,CAAf;AAKAE,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,OAApB,CAA4BC,GAAG,IAAI;AACjC,MAAI,eAAeP,MAAM,CAACO,GAAD,CAAzB,EAAgC;AAC9BP,IAAAA,MAAM,CAACO,GAAD,CAAN,CAAYC,SAAZ,CAAsBR,MAAtB;AACD;AACF,CAJD;eAQeA,M",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\n\nlet sequelize;\nif (process.env.DATABASE_URL) {\n  sequelize = new Sequielize(process.env.DATABASE_URL, {\n    dialect: 'postgres',\n  });\n} else {\n  sequelize = new Sequelize(\n    process.env.DATABASE,\n    process.env.DATABASE_USER,\n    process.env.DATABASE_PASSWORD,\n    {\n      dialect: 'postgres',\n    },\n  );\n}\n\nconst models = {\n  User: sequelize.import('./user'),\n  Message: sequelize.import('./message'),\n};\n\nObject.keys(models).forEach(key => {\n  if ('associate' in models[key]) {\n    models[key].associate(models);\n  }\n});\n\nexport { sequelize };\n\nexport default models;"
      ]
    },
    "sourceType": "script",
    "mtime": 1556152650148
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst user = (sequelize, DataTypes) => {\n  const User = sequelize.define('user', {\n    username: {\n      type: DataTypes.STRING,\n      unique: true,\n      allowNull: false,\n      validate: {\n        notEmpty: true\n      }\n    },\n    email: {\n      type: DataTypes.STRING,\n      unique: true,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        isEmail: true\n      }\n    },\n    password: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        len: [7, 42]\n      }\n    },\n    role: {\n      type: DataTypes.STRING\n    }\n  });\n\n  User.associate = models => {\n    User.hasMany(models.Message, {\n      onDelete: 'CASCADE'\n    });\n  };\n\n  User.findByLogin = async login => {\n    let user = await User.findOne({\n      where: {\n        username: login\n      }\n    });\n\n    if (!user) {\n      user = await User.findOne({\n        where: {\n          email: login\n        }\n      });\n    }\n\n    return user;\n  };\n\n  User.beforeCreate(async user => {\n    user.password = await user.generatePasswordHash();\n  });\n\n  User.prototype.generatePasswordHash = async function () {\n    const saltRounds = 10;\n    return await _bcrypt.default.hash(this.password, saltRounds);\n  };\n\n  User.prototype.validatePassword = async function (password) {\n    return await _bcrypt.default.compare(password, this.password);\n  };\n\n  return User;\n};\n\nvar _default = user;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsidXNlciIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlVzZXIiLCJkZWZpbmUiLCJ1c2VybmFtZSIsInR5cGUiLCJTVFJJTkciLCJ1bmlxdWUiLCJhbGxvd051bGwiLCJ2YWxpZGF0ZSIsIm5vdEVtcHR5IiwiZW1haWwiLCJpc0VtYWlsIiwicGFzc3dvcmQiLCJsZW4iLCJyb2xlIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsIk1lc3NhZ2UiLCJvbkRlbGV0ZSIsImZpbmRCeUxvZ2luIiwibG9naW4iLCJmaW5kT25lIiwid2hlcmUiLCJiZWZvcmVDcmVhdGUiLCJnZW5lcmF0ZVBhc3N3b3JkSGFzaCIsInByb3RvdHlwZSIsInNhbHRSb3VuZHMiLCJiY3J5cHQiLCJoYXNoIiwidmFsaWRhdGVQYXNzd29yZCIsImNvbXBhcmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLE1BQU1BLElBQUksR0FBRyxDQUFDQyxTQUFELEVBQVlDLFNBQVosS0FBMEI7QUFDckMsUUFBTUMsSUFBSSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsTUFBakIsRUFBeUI7QUFDcENDLElBQUFBLFFBQVEsRUFBRTtBQUNSQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssTUFEUjtBQUVSQyxNQUFBQSxNQUFNLEVBQUUsSUFGQTtBQUdSQyxNQUFBQSxTQUFTLEVBQUUsS0FISDtBQUlSQyxNQUFBQSxRQUFRLEVBQUU7QUFDUkMsUUFBQUEsUUFBUSxFQUFFO0FBREY7QUFKRixLQUQwQjtBQVNwQ0MsSUFBQUEsS0FBSyxFQUFFO0FBQ0xOLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxNQURYO0FBRUxDLE1BQUFBLE1BQU0sRUFBRSxJQUZIO0FBR0xDLE1BQUFBLFNBQVMsRUFBRSxLQUhOO0FBSUxDLE1BQUFBLFFBQVEsRUFBRTtBQUNSQyxRQUFBQSxRQUFRLEVBQUUsSUFERjtBQUVSRSxRQUFBQSxPQUFPLEVBQUU7QUFGRDtBQUpMLEtBVDZCO0FBa0JwQ0MsSUFBQUEsUUFBUSxFQUFFO0FBQ1JSLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxNQURSO0FBRVJFLE1BQUFBLFNBQVMsRUFBRSxLQUZIO0FBR1JDLE1BQUFBLFFBQVEsRUFBRTtBQUNSQyxRQUFBQSxRQUFRLEVBQUUsSUFERjtBQUVSSSxRQUFBQSxHQUFHLEVBQUUsQ0FBQyxDQUFELEVBQUksRUFBSjtBQUZHO0FBSEYsS0FsQjBCO0FBMEJwQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0pWLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURaO0FBMUI4QixHQUF6QixDQUFiOztBQStCQUosRUFBQUEsSUFBSSxDQUFDYyxTQUFMLEdBQWlCQyxNQUFNLElBQUk7QUFDekJmLElBQUFBLElBQUksQ0FBQ2dCLE9BQUwsQ0FBYUQsTUFBTSxDQUFDRSxPQUFwQixFQUE2QjtBQUFFQyxNQUFBQSxRQUFRLEVBQUU7QUFBWixLQUE3QjtBQUNELEdBRkQ7O0FBSUFsQixFQUFBQSxJQUFJLENBQUNtQixXQUFMLEdBQW1CLE1BQU1DLEtBQU4sSUFBZTtBQUNoQyxRQUFJdkIsSUFBSSxHQUFHLE1BQU1HLElBQUksQ0FBQ3FCLE9BQUwsQ0FBYTtBQUM1QkMsTUFBQUEsS0FBSyxFQUFFO0FBQUVwQixRQUFBQSxRQUFRLEVBQUVrQjtBQUFaO0FBRHFCLEtBQWIsQ0FBakI7O0FBSUEsUUFBSSxDQUFDdkIsSUFBTCxFQUFXO0FBQ1RBLE1BQUFBLElBQUksR0FBRyxNQUFNRyxJQUFJLENBQUNxQixPQUFMLENBQWE7QUFDeEJDLFFBQUFBLEtBQUssRUFBRTtBQUFFYixVQUFBQSxLQUFLLEVBQUVXO0FBQVQ7QUFEaUIsT0FBYixDQUFiO0FBR0Q7O0FBRUQsV0FBT3ZCLElBQVA7QUFDRCxHQVpEOztBQWNBRyxFQUFBQSxJQUFJLENBQUN1QixZQUFMLENBQWtCLE1BQU0xQixJQUFOLElBQWM7QUFDOUJBLElBQUFBLElBQUksQ0FBQ2MsUUFBTCxHQUFnQixNQUFNZCxJQUFJLENBQUMyQixvQkFBTCxFQUF0QjtBQUNELEdBRkQ7O0FBSUF4QixFQUFBQSxJQUFJLENBQUN5QixTQUFMLENBQWVELG9CQUFmLEdBQXNDLGtCQUFrQjtBQUN0RCxVQUFNRSxVQUFVLEdBQUcsRUFBbkI7QUFDQSxXQUFPLE1BQU1DLGdCQUFPQyxJQUFQLENBQVksS0FBS2pCLFFBQWpCLEVBQTJCZSxVQUEzQixDQUFiO0FBQ0QsR0FIRDs7QUFLQTFCLEVBQUFBLElBQUksQ0FBQ3lCLFNBQUwsQ0FBZUksZ0JBQWYsR0FBa0MsZ0JBQWVsQixRQUFmLEVBQXlCO0FBQ3pELFdBQU8sTUFBTWdCLGdCQUFPRyxPQUFQLENBQWVuQixRQUFmLEVBQXlCLEtBQUtBLFFBQTlCLENBQWI7QUFDRCxHQUZEOztBQUlBLFNBQU9YLElBQVA7QUFDRCxDQWhFRDs7ZUFrRWVILEkiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JjaG93ZGh1cnkvRGVza3RvcC9EZXZfU3R1ZmYvcXVpem5vdy9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHQnXG5cbmNvbnN0IHVzZXIgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgVXNlciA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3VzZXInLCB7XG4gICAgdXNlcm5hbWU6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICB1bmlxdWU6IHRydWUsXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgdmFsaWRhdGU6IHtcbiAgICAgICAgbm90RW1wdHk6IHRydWUsXG4gICAgICB9LFxuICAgIH0sXG4gICAgZW1haWw6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICB1bmlxdWU6IHRydWUsXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgdmFsaWRhdGU6IHtcbiAgICAgICAgbm90RW1wdHk6IHRydWUsXG4gICAgICAgIGlzRW1haWw6IHRydWUsXG4gICAgICB9LFxuICAgIH0sXG4gICAgcGFzc3dvcmQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgdmFsaWRhdGU6IHtcbiAgICAgICAgbm90RW1wdHk6IHRydWUsXG4gICAgICAgIGxlbjogWzcsIDQyXSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICByb2xlOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIH0sXG4gIH0pO1xuXG4gIFVzZXIuYXNzb2NpYXRlID0gbW9kZWxzID0+IHtcbiAgICBVc2VyLmhhc01hbnkobW9kZWxzLk1lc3NhZ2UsIHsgb25EZWxldGU6ICdDQVNDQURFJyB9KTtcbiAgfTtcblxuICBVc2VyLmZpbmRCeUxvZ2luID0gYXN5bmMgbG9naW4gPT4ge1xuICAgIGxldCB1c2VyID0gYXdhaXQgVXNlci5maW5kT25lKHtcbiAgICAgIHdoZXJlOiB7IHVzZXJuYW1lOiBsb2dpbiB9LFxuICAgIH0pO1xuXG4gICAgaWYgKCF1c2VyKSB7XG4gICAgICB1c2VyID0gYXdhaXQgVXNlci5maW5kT25lKHtcbiAgICAgICAgd2hlcmU6IHsgZW1haWw6IGxvZ2luIH0sXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXNlcjtcbiAgfTtcblxuICBVc2VyLmJlZm9yZUNyZWF0ZShhc3luYyB1c2VyID0+IHtcbiAgICB1c2VyLnBhc3N3b3JkID0gYXdhaXQgdXNlci5nZW5lcmF0ZVBhc3N3b3JkSGFzaCgpO1xuICB9KTtcblxuICBVc2VyLnByb3RvdHlwZS5nZW5lcmF0ZVBhc3N3b3JkSGFzaCA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBzYWx0Um91bmRzID0gMTA7XG4gICAgcmV0dXJuIGF3YWl0IGJjcnlwdC5oYXNoKHRoaXMucGFzc3dvcmQsIHNhbHRSb3VuZHMpO1xuICB9O1xuXG4gIFVzZXIucHJvdG90eXBlLnZhbGlkYXRlUGFzc3dvcmQgPSBhc3luYyBmdW5jdGlvbihwYXNzd29yZCkge1xuICAgIHJldHVybiBhd2FpdCBiY3J5cHQuY29tcGFyZShwYXNzd29yZCwgdGhpcy5wYXNzd29yZCk7XG4gIH07XG5cbiAgcmV0dXJuIFVzZXI7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "user",
        "sequelize",
        "DataTypes",
        "User",
        "define",
        "username",
        "type",
        "STRING",
        "unique",
        "allowNull",
        "validate",
        "notEmpty",
        "email",
        "isEmail",
        "password",
        "len",
        "role",
        "associate",
        "models",
        "hasMany",
        "Message",
        "onDelete",
        "findByLogin",
        "login",
        "findOne",
        "where",
        "beforeCreate",
        "generatePasswordHash",
        "prototype",
        "saltRounds",
        "bcrypt",
        "hash",
        "validatePassword",
        "compare"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,MAAMA,IAAI,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrC,QAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADR;AAERC,MAAAA,MAAM,EAAE,IAFA;AAGRC,MAAAA,SAAS,EAAE,KAHH;AAIRC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AADF;AAJF,KAD0B;AASpCC,IAAAA,KAAK,EAAE;AACLN,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADX;AAELC,MAAAA,MAAM,EAAE,IAFH;AAGLC,MAAAA,SAAS,EAAE,KAHN;AAILC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,IADF;AAERE,QAAAA,OAAO,EAAE;AAFD;AAJL,KAT6B;AAkBpCC,IAAAA,QAAQ,EAAE;AACRR,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADR;AAERE,MAAAA,SAAS,EAAE,KAFH;AAGRC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,IADF;AAERI,QAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,EAAJ;AAFG;AAHF,KAlB0B;AA0BpCC,IAAAA,IAAI,EAAE;AACJV,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADZ;AA1B8B,GAAzB,CAAb;;AA+BAJ,EAAAA,IAAI,CAACc,SAAL,GAAiBC,MAAM,IAAI;AACzBf,IAAAA,IAAI,CAACgB,OAAL,CAAaD,MAAM,CAACE,OAApB,EAA6B;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA7B;AACD,GAFD;;AAIAlB,EAAAA,IAAI,CAACmB,WAAL,GAAmB,MAAMC,KAAN,IAAe;AAChC,QAAIvB,IAAI,GAAG,MAAMG,IAAI,CAACqB,OAAL,CAAa;AAC5BC,MAAAA,KAAK,EAAE;AAAEpB,QAAAA,QAAQ,EAAEkB;AAAZ;AADqB,KAAb,CAAjB;;AAIA,QAAI,CAACvB,IAAL,EAAW;AACTA,MAAAA,IAAI,GAAG,MAAMG,IAAI,CAACqB,OAAL,CAAa;AACxBC,QAAAA,KAAK,EAAE;AAAEb,UAAAA,KAAK,EAAEW;AAAT;AADiB,OAAb,CAAb;AAGD;;AAED,WAAOvB,IAAP;AACD,GAZD;;AAcAG,EAAAA,IAAI,CAACuB,YAAL,CAAkB,MAAM1B,IAAN,IAAc;AAC9BA,IAAAA,IAAI,CAACc,QAAL,GAAgB,MAAMd,IAAI,CAAC2B,oBAAL,EAAtB;AACD,GAFD;;AAIAxB,EAAAA,IAAI,CAACyB,SAAL,CAAeD,oBAAf,GAAsC,kBAAkB;AACtD,UAAME,UAAU,GAAG,EAAnB;AACA,WAAO,MAAMC,gBAAOC,IAAP,CAAY,KAAKjB,QAAjB,EAA2Be,UAA3B,CAAb;AACD,GAHD;;AAKA1B,EAAAA,IAAI,CAACyB,SAAL,CAAeI,gBAAf,GAAkC,gBAAelB,QAAf,EAAyB;AACzD,WAAO,MAAMgB,gBAAOG,OAAP,CAAenB,QAAf,EAAyB,KAAKA,QAA9B,CAAb;AACD,GAFD;;AAIA,SAAOX,IAAP;AACD,CAhED;;eAkEeH,I",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models",
      "sourcesContent": [
        "import bcrypt from 'bcrypt'\n\nconst user = (sequelize, DataTypes) => {\n  const User = sequelize.define('user', {\n    username: {\n      type: DataTypes.STRING,\n      unique: true,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n      },\n    },\n    email: {\n      type: DataTypes.STRING,\n      unique: true,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        isEmail: true,\n      },\n    },\n    password: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        len: [7, 42],\n      },\n    },\n    role: {\n      type: DataTypes.STRING,\n    },\n  });\n\n  User.associate = models => {\n    User.hasMany(models.Message, { onDelete: 'CASCADE' });\n  };\n\n  User.findByLogin = async login => {\n    let user = await User.findOne({\n      where: { username: login },\n    });\n\n    if (!user) {\n      user = await User.findOne({\n        where: { email: login },\n      });\n    }\n\n    return user;\n  };\n\n  User.beforeCreate(async user => {\n    user.password = await user.generatePasswordHash();\n  });\n\n  User.prototype.generatePasswordHash = async function () {\n    const saltRounds = 10;\n    return await bcrypt.hash(this.password, saltRounds);\n  };\n\n  User.prototype.validatePassword = async function(password) {\n    return await bcrypt.compare(password, this.password);\n  };\n\n  return User;\n};\n\nexport default user;"
      ]
    },
    "sourceType": "script",
    "mtime": 1556126695006
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/message.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/message.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/message.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models/message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models",
        "sourceFileName": "message.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nconst message = (sequelize, DataTypes) => {\n  const Message = sequelize.define('message', {\n    text: {\n      type: DataTypes.STRING,\n      validate: {\n        notEmpty: {\n          args: true,\n          msg: 'You need to enter text to send a message!'\n        }\n      }\n    }\n  });\n\n  Message.associate = models => {\n    Message.belongsTo(models.User);\n  };\n\n  return Message;\n};\n\nvar _default = message;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UuanMiXSwibmFtZXMiOlsibWVzc2FnZSIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIk1lc3NhZ2UiLCJkZWZpbmUiLCJ0ZXh0IiwidHlwZSIsIlNUUklORyIsInZhbGlkYXRlIiwibm90RW1wdHkiLCJhcmdzIiwibXNnIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLE1BQU1BLE9BQU8sR0FBRyxDQUFDQyxTQUFELEVBQVlDLFNBQVosS0FBMEI7QUFDeEMsUUFBTUMsT0FBTyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsU0FBakIsRUFBNEI7QUFDMUNDLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssTUFEWjtBQUVKQyxNQUFBQSxRQUFRLEVBQUU7QUFDUkMsUUFBQUEsUUFBUSxFQUFFO0FBQ1JDLFVBQUFBLElBQUksRUFBRSxJQURFO0FBRVJDLFVBQUFBLEdBQUcsRUFBRTtBQUZHO0FBREY7QUFGTjtBQURvQyxHQUE1QixDQUFoQjs7QUFZQVIsRUFBQUEsT0FBTyxDQUFDUyxTQUFSLEdBQW9CQyxNQUFNLElBQUk7QUFDNUJWLElBQUFBLE9BQU8sQ0FBQ1csU0FBUixDQUFrQkQsTUFBTSxDQUFDRSxJQUF6QjtBQUNELEdBRkQ7O0FBSUEsU0FBT1osT0FBUDtBQUNELENBbEJEOztlQW9CZUgsTyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmNob3dkaHVyeS9EZXNrdG9wL0Rldl9TdHVmZi9xdWl6bm93L3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtZXNzYWdlID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IE1lc3NhZ2UgPSBzZXF1ZWxpemUuZGVmaW5lKCdtZXNzYWdlJywge1xuICAgIHRleHQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICB2YWxpZGF0ZTogeyBcbiAgICAgICAgbm90RW1wdHk6IHtcbiAgICAgICAgICBhcmdzOiB0cnVlLFxuICAgICAgICAgIG1zZzogJ1lvdSBuZWVkIHRvIGVudGVyIHRleHQgdG8gc2VuZCBhIG1lc3NhZ2UhJ1xuICAgICAgICB9IFxuICAgICAgfSxcbiAgICB9LFxuICB9KTtcblxuICBNZXNzYWdlLmFzc29jaWF0ZSA9IG1vZGVscyA9PiB7XG4gICAgTWVzc2FnZS5iZWxvbmdzVG8obW9kZWxzLlVzZXIpO1xuICB9O1xuXG4gIHJldHVybiBNZXNzYWdlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWVzc2FnZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "message.js"
      ],
      "names": [
        "message",
        "sequelize",
        "DataTypes",
        "Message",
        "define",
        "text",
        "type",
        "STRING",
        "validate",
        "notEmpty",
        "args",
        "msg",
        "associate",
        "models",
        "belongsTo",
        "User"
      ],
      "mappings": ";;;;;;;AAAA,MAAMA,OAAO,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACxC,QAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADZ;AAEJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE,IADE;AAERC,UAAAA,GAAG,EAAE;AAFG;AADF;AAFN;AADoC,GAA5B,CAAhB;;AAYAR,EAAAA,OAAO,CAACS,SAAR,GAAoBC,MAAM,IAAI;AAC5BV,IAAAA,OAAO,CAACW,SAAR,CAAkBD,MAAM,CAACE,IAAzB;AACD,GAFD;;AAIA,SAAOZ,OAAP;AACD,CAlBD;;eAoBeH,O",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/models",
      "sourcesContent": [
        "const message = (sequelize, DataTypes) => {\n  const Message = sequelize.define('message', {\n    text: {\n      type: DataTypes.STRING,\n      validate: { \n        notEmpty: {\n          args: true,\n          msg: 'You need to enter text to send a message!'\n        } \n      },\n    },\n  });\n\n  Message.associate = models => {\n    Message.belongsTo(models.User);\n  };\n\n  return Message;\n};\n\nexport default message;"
      ]
    },
    "sourceType": "script",
    "mtime": 1555638066403
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _user = _interopRequireDefault(require(\"./user\"));\n\nvar _message = _interopRequireDefault(require(\"./message\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst linkSchema = _apolloServerExpress.gql`\n\n  scalar Date\n  \n  type Query {\n    _: Boolean\n  }\n  type Mutation {\n    _: Boolean\n  }\n  type Subscription {\n    _: Boolean\n  }\n`;\nvar _default = [linkSchema, _user.default, _message.default];\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImxpbmtTY2hlbWEiLCJncWwiLCJ1c2VyU2NoZW1hIiwibWVzc2FnZVNjaGVtYSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBOzs7O0FBRUEsTUFBTUEsVUFBVSxHQUFHQyx3QkFBSTs7Ozs7Ozs7Ozs7OztDQUF2QjtlQWVlLENBQUNELFVBQUQsRUFBYUUsYUFBYixFQUF5QkMsZ0JBQXpCLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JjaG93ZGh1cnkvRGVza3RvcC9EZXZfU3R1ZmYvcXVpem5vdy9zcmMvc2NoZW1hIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3FsIH0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJztcblxuaW1wb3J0IHVzZXJTY2hlbWEgZnJvbSAnLi91c2VyJztcbmltcG9ydCBtZXNzYWdlU2NoZW1hIGZyb20gJy4vbWVzc2FnZSc7XG5cbmNvbnN0IGxpbmtTY2hlbWEgPSBncWxgXG5cbiAgc2NhbGFyIERhdGVcbiAgXG4gIHR5cGUgUXVlcnkge1xuICAgIF86IEJvb2xlYW5cbiAgfVxuICB0eXBlIE11dGF0aW9uIHtcbiAgICBfOiBCb29sZWFuXG4gIH1cbiAgdHlwZSBTdWJzY3JpcHRpb24ge1xuICAgIF86IEJvb2xlYW5cbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgW2xpbmtTY2hlbWEsIHVzZXJTY2hlbWEsIG1lc3NhZ2VTY2hlbWFdO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "linkSchema",
        "gql",
        "userSchema",
        "messageSchema"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;;;AAEA,MAAMA,UAAU,GAAGC,wBAAI;;;;;;;;;;;;;CAAvB;eAee,CAACD,UAAD,EAAaE,aAAb,EAAyBC,gBAAzB,C",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nimport userSchema from './user';\nimport messageSchema from './message';\n\nconst linkSchema = gql`\n\n  scalar Date\n  \n  type Query {\n    _: Boolean\n  }\n  type Mutation {\n    _: Boolean\n  }\n  type Subscription {\n    _: Boolean\n  }\n`;\n\nexport default [linkSchema, userSchema, messageSchema];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556133402723
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _default = _apolloServerExpress.gql`\n  extend type Query {\n    users: [User!]\n    user(id: ID!): User\n    me: User\n  }\n\n  extend type Mutation {\n    signUp(\n      username: String!\n      email: String!\n      password: String!\n    ): Token!\n\n    signIn(login: String!, password: String!): Token!\n    deleteUser(id: ID!): Boolean!\n  }\n\n  type Token {\n    token: String!\n  }\n  \n  type User {\n    id: ID!\n    username: String!\n    email: String!\n    role: String\n    messages: [Message!]\n  }\n`;\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZ3FsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O2VBRWVBLHdCQUFJIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yY2hvd2RodXJ5L0Rlc2t0b3AvRGV2X1N0dWZmL3F1aXpub3cvc3JjL3NjaGVtYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGdxbGBcbiAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgIHVzZXJzOiBbVXNlciFdXG4gICAgdXNlcihpZDogSUQhKTogVXNlclxuICAgIG1lOiBVc2VyXG4gIH1cblxuICBleHRlbmQgdHlwZSBNdXRhdGlvbiB7XG4gICAgc2lnblVwKFxuICAgICAgdXNlcm5hbWU6IFN0cmluZyFcbiAgICAgIGVtYWlsOiBTdHJpbmchXG4gICAgICBwYXNzd29yZDogU3RyaW5nIVxuICAgICk6IFRva2VuIVxuXG4gICAgc2lnbkluKGxvZ2luOiBTdHJpbmchLCBwYXNzd29yZDogU3RyaW5nISk6IFRva2VuIVxuICAgIGRlbGV0ZVVzZXIoaWQ6IElEISk6IEJvb2xlYW4hXG4gIH1cblxuICB0eXBlIFRva2VuIHtcbiAgICB0b2tlbjogU3RyaW5nIVxuICB9XG4gIFxuICB0eXBlIFVzZXIge1xuICAgIGlkOiBJRCFcbiAgICB1c2VybmFtZTogU3RyaW5nIVxuICAgIGVtYWlsOiBTdHJpbmchXG4gICAgcm9sZTogU3RyaW5nXG4gICAgbWVzc2FnZXM6IFtNZXNzYWdlIV1cbiAgfVxuYDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;eAEeA,wBAAI",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nexport default gql`\n  extend type Query {\n    users: [User!]\n    user(id: ID!): User\n    me: User\n  }\n\n  extend type Mutation {\n    signUp(\n      username: String!\n      email: String!\n      password: String!\n    ): Token!\n\n    signIn(login: String!, password: String!): Token!\n    deleteUser(id: ID!): Boolean!\n  }\n\n  type Token {\n    token: String!\n  }\n  \n  type User {\n    id: ID!\n    username: String!\n    email: String!\n    role: String\n    messages: [Message!]\n  }\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1556120177388
  },
  "{\"sourceRoot\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"filename\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/message.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rchowdhury/Desktop/Dev_Stuff/quiznow\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/message.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/message.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema/message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
        "sourceFileName": "message.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _default = _apolloServerExpress.gql`\n  extend type Query {\n    messages(cursor: String, limit: Int): MessageConnection!\n    message(id: ID!): Message!\n  }\n  extend type Mutation {\n    createMessage(text: String!): Message!\n    deleteMessage(id: ID!): Boolean!\n  }\n  type MessageConnection {\n    edges: [Message!]!\n    pageInfo: PageInfo!\n  }\n  type PageInfo {\n    hasNextPage: Boolean!\n    endCursor: Date!\n  }\n  type Message {\n    id: ID!\n    text: String!\n    createdAt: Date!\n    user: User!\n  }\n`;\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UuanMiXSwibmFtZXMiOlsiZ3FsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O2VBRWVBLHdCQUFJIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yY2hvd2RodXJ5L0Rlc2t0b3AvRGV2X1N0dWZmL3F1aXpub3cvc3JjL3NjaGVtYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGdxbGBcbiAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgIG1lc3NhZ2VzKGN1cnNvcjogU3RyaW5nLCBsaW1pdDogSW50KTogTWVzc2FnZUNvbm5lY3Rpb24hXG4gICAgbWVzc2FnZShpZDogSUQhKTogTWVzc2FnZSFcbiAgfVxuICBleHRlbmQgdHlwZSBNdXRhdGlvbiB7XG4gICAgY3JlYXRlTWVzc2FnZSh0ZXh0OiBTdHJpbmchKTogTWVzc2FnZSFcbiAgICBkZWxldGVNZXNzYWdlKGlkOiBJRCEpOiBCb29sZWFuIVxuICB9XG4gIHR5cGUgTWVzc2FnZUNvbm5lY3Rpb24ge1xuICAgIGVkZ2VzOiBbTWVzc2FnZSFdIVxuICAgIHBhZ2VJbmZvOiBQYWdlSW5mbyFcbiAgfVxuICB0eXBlIFBhZ2VJbmZvIHtcbiAgICBoYXNOZXh0UGFnZTogQm9vbGVhbiFcbiAgICBlbmRDdXJzb3I6IERhdGUhXG4gIH1cbiAgdHlwZSBNZXNzYWdlIHtcbiAgICBpZDogSUQhXG4gICAgdGV4dDogU3RyaW5nIVxuICAgIGNyZWF0ZWRBdDogRGF0ZSFcbiAgICB1c2VyOiBVc2VyIVxuICB9XG5gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "message.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;eAEeA,wBAAI",
      "sourceRoot": "/Users/rchowdhury/Desktop/Dev_Stuff/quiznow/src/schema",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nexport default gql`\n  extend type Query {\n    messages(cursor: String, limit: Int): MessageConnection!\n    message(id: ID!): Message!\n  }\n  extend type Mutation {\n    createMessage(text: String!): Message!\n    deleteMessage(id: ID!): Boolean!\n  }\n  type MessageConnection {\n    edges: [Message!]!\n    pageInfo: PageInfo!\n  }\n  type PageInfo {\n    hasNextPage: Boolean!\n    endCursor: Date!\n  }\n  type Message {\n    id: ID!\n    text: String!\n    createdAt: Date!\n    user: User!\n  }\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1556141929500
  }
}